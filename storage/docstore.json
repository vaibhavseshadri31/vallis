{"docstore/metadata": {"86f3f6f4-e516-4a7f-9d25-4e3849b48410": {"doc_hash": "59b7e42994fa1a7bde1ddd6db7021c365104e672b61de2a11d939a1ab0979b6c"}, "8134e5bb-5cfe-4f70-96cd-69c30ce41d1f": {"doc_hash": "04a23fea6580315f6648e034eea8d236da9de985c4b579370c1fa3948b8d0cd3"}, "38eae104-6adf-4c22-bd0f-73ee6881a43c": {"doc_hash": "bd2afa44537bc52f2e4b55df4b94206634f2f8f6b6dda5cb9f1fecaaeea7d774"}, "98892e1e-69b7-4f52-9c48-e3ad24f0b172": {"doc_hash": "ac683d39694559e69b886234bc4d4d258798e72b8c0997aa53d4ec985ec99642"}, "8adba8fe-16fb-42aa-bdfe-5c3bdfbde10e": {"doc_hash": "91f83543ec63b5c5c34c1a2d99ce9b5f964efee2fc95a7301810660fd6d761a1"}, "f5b32922-730e-43dd-90de-79764f5d889a": {"doc_hash": "c72bf52d5bb9a5d629bbdc4ef2d0c4fb6aa76845ea04d17ad160d27d30dc3f9e"}, "e84629ac-31cf-4771-9f78-b1ffdfa4fe4a": {"doc_hash": "3663f0a83ffcd4e53813465d1aa310c810e79cce5bb4555dae85737b337c0db0"}, "e0494a39-ac6a-41c8-95d1-52cbc714168c": {"doc_hash": "8e7186b458e8e1e005444aca091bcd2f59c80c69323ce6713be146cdb03fb88f"}, "6ad6bb7b-9f14-4910-9959-00704a907387": {"doc_hash": "8f3e831ce1b2ed3aeb9307122a3615c3bfa1c9ca5a8200e8c17be32d32566f5d"}, "66a66ade-a22d-4c75-87ac-70283eb4c072": {"doc_hash": "81de05a1ba05260b801d596a65bcf8a8c6a5009d886f85f8fb5104396048b2e2"}, "c428d2bf-b75f-4016-98b6-d6835116de7c": {"doc_hash": "7e9f34f6ad972773706dd3d3c7a2d9af2b1bf61e5172d0831284ae4094c4a68f"}, "a24ab97d-4e5a-44b4-8893-6fd149413595": {"doc_hash": "985fa55454ab945980d23f4b843ebd6e206013fbf89c62981e4d081aa790a541"}, "d7656ccf-2042-4248-b77c-beacbbeb8a58": {"doc_hash": "30b925b6de8c09dac74943f6c3cd889dc73e17f7323a03ddbce480ff6628dc3d"}, "52f95bc0-31bb-4ef1-ae72-5e0172880f49": {"doc_hash": "961a4fe821b50046254423d9c5903b95236e882cc47c61dfef6bc330ba53927b"}, "ddf89d81-42e3-4fd2-87e7-ade3dfe6508b": {"doc_hash": "3c5476b480993b58ec525f2c8b7fb3e83d7f1dbcbea5cbeb6ae7f78bcddc2845"}, "f7b8a771-55c3-4786-9fae-d0961cc7037c": {"doc_hash": "4d11e20cf5f3c6dd5de797ad2a9918ec95b5951b2b58cf16e794e895851181cd"}, "e65d1dad-7de5-43d2-82f8-98e707fde569": {"doc_hash": "a8a12937c3b188e9c624b5972ef7f5b5d017c4ed203e695d814c4f5fa7c2ea91"}, "07af7883-b891-48bc-af33-12b54e72227c": {"doc_hash": "e8a83bdd6a890a929f0702360f9a723c7b1505e6c314d4ae02b807e78d640f32"}, "8d44ce75-ea52-4b27-84d2-6d24f012363f": {"doc_hash": "12dc32e642dbfcde3ddc25f56cbacce32fd0eddfec3c1a37a7c5aabe1fc948bc"}, "52f3d6ff-c4be-42b8-beb8-1f058b5989cc": {"doc_hash": "b84d54d1155f1959ab3597bf806a9c2b849ad2c215fdbb7fed777903c2b4f23a"}, "f309fbed-a76b-4338-89ec-c3b58260fa85": {"doc_hash": "41c1002ede9f1a4aa7dffa9b3d5b935195c37fa105bb271f3fa97369e32996ba"}, "faccc440-6628-4072-afa3-a0ce1d53e73b": {"doc_hash": "e4ec7bf5c25cf50ce58abdba71d3bd49e6cfc587ec0b94d784948701e2d11545"}, "6ad90067-a011-4e97-b645-e099824402f6": {"doc_hash": "68930f7526b89bc2fd3b5a649cb2956d39de206438c405a841c3a6dcbb24e7e2"}, "6a29bb7c-4052-4aeb-a145-4c5fbfbb61d7": {"doc_hash": "4f90bf3a2f4f45b5f6e78f9eb5f0e51343cd4a0e94a4d77f4aa21ffa55dd8dc8"}, "de9a80eb-2c15-4aeb-a569-c917b2a1e662": {"doc_hash": "383ca4a33a7e55ee2c99df7b6e53240f2f8baf7615801d09208452f7aa2ab834"}, "f8e70d21-6bdd-44e9-b148-a85953d7f32e": {"doc_hash": "7fbca577a853e335f17c6a7c9918da87731178223fb2fe11ffb00a692ccab498"}, "3d7ff3fa-798a-4462-bb75-9cf66542fe3c": {"doc_hash": "725fb763776d26d88e2325766504ee3c1590c8838b634795d78720110be9f517"}, "993b4d8b-7060-4556-8c1c-a6ac3cb793b0": {"doc_hash": "e698c19e8d6768e77696c47762b516023acda389a13179c867b7c0b530a5d291"}, "5618a944-1866-4b89-8fc3-6314eecffea8": {"doc_hash": "3f15f26d94ff1d39e6aa464d960df567a02631a8cdc1ea61ba635531c65f90f4"}, "5c470945-250e-420b-ad21-d1ff50e8cfd6": {"doc_hash": "e82878cf852997a513830608b8115368b0ac56158608805ff5e45d0dca2bcf0f"}, "ee136f72-10be-4a10-872f-0d59f5cfaf5d": {"doc_hash": "dc6a92154ad0b04df677c8acc53305b4d2e8dda3110d11498f561e32d561f5bf"}, "f1fd88cb-0150-41a7-8e84-86a2c9650a49": {"doc_hash": "20ecda4278aa54f43fbe55e56a994dbe79a4f1c67b97deaf15307b8edbdd0fbd"}, "81ede3f4-f732-447c-ac26-75582cf97176": {"doc_hash": "fde89541729a91ce506459868bad1112c8a1f90f75110b11b363c60e58a47a78"}, "b1b7cd7e-41b6-42ca-8c60-7d16dc18e50a": {"doc_hash": "645c3345ac9042930875a5ec1c9e763a753c2b7f645ab1583d02aae5b995f0d7"}, "fedb07f4-ce5b-414b-bf85-d752a8e771f4": {"doc_hash": "1c5b3a5af62133ffc6e3e260c0e4d2aeb7cc60fff367b916d4f92875ffe1a9ee"}, "c2811ee0-001b-4706-8168-e6c30302d471": {"doc_hash": "8d62d1dd09c11878861be48d79ae81be5ea2fd5848d1c2f61248da2ce243be8a"}, "e7bdf128-97f4-4aae-8a94-138d4bdd61bb": {"doc_hash": "f75d381c623d75635e15191c6f65b9dcd6f5e3b1ba6b615add0cdfd2161c3be4"}, "bc8b03da-2120-40e3-90c8-a8864c9768f1": {"doc_hash": "2b5713d31af36fad25a17787fd996f4e9118fcc3204a49de076fb7d0373dee9f"}, "2485160d-36dc-4c4e-b708-e53d71c1bd98": {"doc_hash": "29d56cc45c684982df3bbad3fd649b5d5030b42795c78f4a07461878a2615b80"}, "526c7439-2265-4009-bc9a-042915192a09": {"doc_hash": "c8e8e5ba610a5ac4c90d8eab2082a6023baa9e650482472b737f012a7bb52f07"}, "1ef78171-3202-4408-a42a-5d4130e9c6c2": {"doc_hash": "96de607c2cb0244d16fd2227c0de0cf7a64216dd64dca566d9f65dd10d26c571"}, "12bb8d7c-95fb-4a19-8f4a-f474f4ee66c8": {"doc_hash": "d8fa76c93e8d254cec00990db4439488ad881f1d42db223d345b7ed23328a964"}, "f185fc72-7abc-444f-adb7-65b72644f52a": {"doc_hash": "8d451b71513e16a2ec57d9dc4ffee441cf9011b4aabc6c4275861197f62d6b9a"}, "6446ff8b-19b7-4370-9cce-e5f012654df2": {"doc_hash": "ac371c4af08c4e08d897048adf0f4f19e0a4048ab2bcb0801af5496713b3f630"}, "906bc828-2da8-495f-b373-b7a56ca0b297": {"doc_hash": "5682673bdbfb4240a2949ef3d23af8f5bc12715649c2dc8bbbca92774a9f74bc"}, "b964d3dd-f752-4a78-822c-ce267c586e71": {"doc_hash": "83307d117d2526750cbb08bcca579449d6d84076858b6e991b78a62dfff00ac1"}, "2336b549-333c-4dce-a5af-461a1547d7d6": {"doc_hash": "3100d6d1010d46ce33b867f60dedc53a4d52e025b897cb18e59fb2d34b1c878e"}, "635f44da-7c4d-43b5-acbd-e11a712bfc50": {"doc_hash": "dca673d42252f06c0ff2922c18d4b43394d1bb903b43eb3bb86a7add07a23e78"}, "810ac4e4-781a-478d-b708-765191428c46": {"doc_hash": "e6c2546afadf1f4949b7c9daee6c2a0e2141e88595a9c2957b4b60e93a99703f"}, "8099c798-3d18-4478-9447-1649b17aa827": {"doc_hash": "77eff0da6b2bc0fd1730803496f9d429a0f870be4e9a0a7ca5bf48d5ebead518"}, "b28c5116-148d-4cb2-b1a7-20bab321cf51": {"doc_hash": "170243988b2c9a5c0377e99a043c3aadb21f8de99a23d8fba5080390ce32fbd1"}, "7c8415b0-c0f6-460b-817a-73e4be151854": {"doc_hash": "d54935fed34899c466c26a38161d950a1b35fcca73ceec8c8734b77a5f60f5bd"}, "b90f47ab-0875-44fe-9c03-ee3ce58e6c24": {"doc_hash": "b4876397b24b4b72293c93e93eb1c240686a5733458dddb928cd248fa9c6eaaa"}, "bd509720-d362-4a03-b338-4a666df1c27d": {"doc_hash": "effb69b9768be2f119f61959e666b9209a3c08300f8797a38eb9017b6b7ce2a9"}, "07f05a6c-71ee-4890-8482-70abed864d12": {"doc_hash": "3e9b7c495206b1d573ce7c92c0628214c00f236fd4cb4aaffbb1acda4a48201f"}, "c094c12f-1872-4230-9db3-663177fec3a3": {"doc_hash": "50e2f68ff5bf6e08ba9fa837781e93a00434b5e0350136fe37af837b5990da0c"}, "50d0329f-e7ad-4e8a-9212-ed0c13e70545": {"doc_hash": "4dc38bb99e5162b73156653c590e58d35978d135afbd59f62d14930284055fad"}, "344920e6-8a58-4db3-a16f-9343b93a2be5": {"doc_hash": "10c28eeb4a59d10cf6a20b989af83a5043d2e908ae4d61619c9fd68748eb2625"}, "594e3194-73dd-4992-9132-b9ebd719cd04": {"doc_hash": "1e04fd596c18824e5d9376d27969d6a8e91cce76be5b45a24853c45c4252528f"}, "45a76e81-0eaf-4c4a-8df7-0e20869336ff": {"doc_hash": "a66f7f116816e25461fae90d96507c8f822a8f73395c3c5fb2abb5358ee130d5"}, "5751c887-f7b6-4adf-82b7-52b1d8e9b490": {"doc_hash": "88503523cb73443431377a055f4a59ce432d66b7a15b63155b38967d0cb7524b"}, "9d7405eb-105b-4067-9c86-d5ec0fd63c7a": {"doc_hash": "2f1cd03067e93c1f27f751747121a0f7f473db7110ab68000a4b17931e4cf657"}, "d633ffc0-145b-480d-9051-e14b5e6e3c2c": {"doc_hash": "f494784f7e4de072a9b75868483edcdd4cfbbecd23fbe8d60332a2bb6a827ae2"}, "630f92dc-b28f-4bf4-bbc1-de92a604305a": {"doc_hash": "92339125aa0b568b94af4da622070e4bd18ef6bc12f3f3f186d64ab524c7b140"}, "c242fcff-2699-4f7f-ac50-22fcd43951ad": {"doc_hash": "be49af8436faf00494f8dbc7ba97d97370f7ecca1401a6ad04929e8a5c559b31"}, "57a84c72-4095-45df-935e-d30a61a704e7": {"doc_hash": "834a4388109620f35f997c1bc0c3d41f637b9b86ccb9bf393c2f19614b00fc1a"}, "cc768538-b7db-493c-a5e8-908d4d93adf4": {"doc_hash": "087e08b6264fc2ea9e428a6fb50c7c3bef9dfcb57ab33f6b4479f769dacdf2f3"}, "cbcae74f-a7ff-4d6c-8c63-4459faec75e4": {"doc_hash": "5ed693e33878391a45f01a1010d8f90b06b7a6a53814ceb53b16ad20b645f54b"}, "837c2796-ac36-4382-9181-318604ae0185": {"doc_hash": "d7c8cbfaa4433d97d9bfab0566fc876952660a09f3874b52f150574e93eb95f7"}, "b04ce058-9be5-499f-be8d-19035dc76ead": {"doc_hash": "416efa47798222cb5b31ebdf651403861c108453efe666b9c0a6bf6e45d7b1dc"}, "1eb27764-2236-456e-8169-d96029185ce7": {"doc_hash": "e35f9926b892eb0416a01aaabfea6fcbc0b1760e71451f92447b3392cb397424"}, "30f6d311-d142-4cf4-b5fc-cf7f84df56b4": {"doc_hash": "4305d26179665aafd56b25c0e6ff77bad7e80ac9becf2744224743c42141f6d1"}, "7e86b0c9-5361-4e82-80b7-f489bffdb3cc": {"doc_hash": "80ba7b427a7a2b54f9de9512e027c5a70585c5bd1e764fd390b8a76f8131ac0b"}, "ec0f081e-83c2-4ed3-a8e0-5a574244062c": {"doc_hash": "e94d4cd1d38a0c6abc7c82918f36822ab893ab52d886baa2e717a458d319cab1"}, "a58ac901-5cee-4507-a631-88147eeaeabd": {"doc_hash": "7fcb4e01650559b7f62ebd5772b459c72ce5fe9369d1a0497c79e60a22cebe06"}, "db0dd6b2-751b-401c-b9c0-77f273d7d710": {"doc_hash": "b28152f226b5f79bf85685dfa9b7579ce86bded033d000545b570f89acc71e08"}, "0b7c960c-d73d-4a30-bc9a-6d14be87d4f9": {"doc_hash": "89ad87e8d822b314ecf72bf636d66ed9118e7057f4c675f21aca6305feb982b1"}, "cba1e246-8ed7-41e3-8293-2219d3569257": {"doc_hash": "2e6f6a7ac6d0976c7c547ca7ab09c8996568968aec535f7dc2a796f2c1066842"}, "0995487d-cb61-4dc5-bd25-a093d316a164": {"doc_hash": "1a563f0b9e62014fa7da839f29390c427c9aa3df6fc198afb32edfd1402cecd2"}, "1d05331a-8447-481b-b1d4-61e5259f7da1": {"doc_hash": "4be15df536e683ec936138cedd2f3f00fa98fdb24e1905f927052fba86ff1e1d"}, "2856f417-443d-4777-8acb-545a6d3b473d": {"doc_hash": "6cad8a1fb754b5d7fd17aca322b944a703b274b6b33c6bd9731103329c69b84a"}, "8a137674-7a39-44bc-9ed0-713d9a1235a4": {"doc_hash": "eb5c00f355babbc3b1567e243ca88fe16c98fb5a454f795c3e8f4b6c471ae1de"}, "0009942b-510a-436f-a3f5-d49c412ea020": {"doc_hash": "46d8bccc44d918cd237c9fdaed143a3691f51c66b7b15d9acb376f94d1f7d45b"}, "a8a8c6f6-03ec-4fb7-963c-0bb9c54c2f34": {"doc_hash": "52ce884086459ba7e58f884509a072d7a96a93d1f1c1aac42617f9fe1ccc9a8e"}, "7d90e3f7-7cd7-46bc-b64d-cbfa6a020b25": {"doc_hash": "4e1adb5679adbadfa4dabd45e404748ae5ab21c0ac77ed7ff82080cb486bfbd2", "ref_doc_id": "86f3f6f4-e516-4a7f-9d25-4e3849b48410"}, "fdd13b16-14b7-406d-936b-4f0e7dbf5ad4": {"doc_hash": "66bff08dd56e0dd87decf427a37af8153f33132b43abbf33bf3a1bb8193adc41", "ref_doc_id": "8134e5bb-5cfe-4f70-96cd-69c30ce41d1f"}, "b99caea3-a960-49e3-b455-bd0949986560": {"doc_hash": "bd2afa44537bc52f2e4b55df4b94206634f2f8f6b6dda5cb9f1fecaaeea7d774", "ref_doc_id": "38eae104-6adf-4c22-bd0f-73ee6881a43c"}, "a377b391-6fd5-44da-9bfe-8d4a6f01010b": {"doc_hash": "50da2f704685d97d5330145972d18a7a4dc1e6f93b407f15551ed66e7ef1537d", "ref_doc_id": "98892e1e-69b7-4f52-9c48-e3ad24f0b172"}, "f407e1dd-e050-4658-a272-c982afb4a0af": {"doc_hash": "54f5d02b2f4ecc398d4287e509f33980baa14b87d317cc65c50c8256d03ea094", "ref_doc_id": "8adba8fe-16fb-42aa-bdfe-5c3bdfbde10e"}, "c300f015-c1a2-4262-861e-02b10b4ca7f9": {"doc_hash": "a0d63d18365fc3f0f3e6319ca1da70746ddfb362f8bc8d67ba89cf52c8128bcd", "ref_doc_id": "f5b32922-730e-43dd-90de-79764f5d889a"}, "c2e9ca89-e69c-4a75-a07e-8dba34d925c8": {"doc_hash": "f877bfd944d405491b25999943c7c17a8c999c272ec0f5f3d2b1639e6936e22d", "ref_doc_id": "e84629ac-31cf-4771-9f78-b1ffdfa4fe4a"}, "21168925-3258-4b51-aa4c-c53b8f42d9e6": {"doc_hash": "744a4f528864f672224b32cc32b78872cee1301a940a4811caac5ea0ef9a54c0", "ref_doc_id": "e0494a39-ac6a-41c8-95d1-52cbc714168c"}, "a5faa3d7-bde6-4785-a697-ad6eed0b3c64": {"doc_hash": "2e8c1166321cd562bd20fc40c0243ff622d79993bdb9f069d2473ea6fe7b5b24", "ref_doc_id": "6ad6bb7b-9f14-4910-9959-00704a907387"}, "4ad5d385-1b47-4471-a726-f43ff15ced42": {"doc_hash": "217aff30501c6f493234861a574b25603297c30cb0c9f23626f0acb9c365fdf4", "ref_doc_id": "66a66ade-a22d-4c75-87ac-70283eb4c072"}, "62b89611-8377-4594-8c2a-a68803831667": {"doc_hash": "193128e2f8c6f0728fd4ad17db4c1e6a6974a0274106cf385d5e84f0c15ded81", "ref_doc_id": "c428d2bf-b75f-4016-98b6-d6835116de7c"}, "9b93e878-9bb4-43c9-9a8c-426fb8de0c4a": {"doc_hash": "0fb9aa1f7710b1fc629549d9976175f9d2a42973ae736ea2fd9f76dcf2012bfe", "ref_doc_id": "a24ab97d-4e5a-44b4-8893-6fd149413595"}, "dae4284f-52e6-4e53-a90d-af3fa10af2e7": {"doc_hash": "a55ab5ab17836705b3416cd222d70cc40fdf8f0626b6f96cb070aabcbb5c7898", "ref_doc_id": "d7656ccf-2042-4248-b77c-beacbbeb8a58"}, "021b95ca-9e6b-4a94-b67f-c3b52f2fb7b9": {"doc_hash": "b4c2a972f2561012f770c5125a5441c471456ecdbbf0fce32c4c35d697dbea19", "ref_doc_id": "52f95bc0-31bb-4ef1-ae72-5e0172880f49"}, "82ad9044-2e82-44b5-aff9-dd7bcadc980d": {"doc_hash": "003f407751f2f1da9c4b2d93a972b7a18d8f4145e10abaf6165b873d630d807b", "ref_doc_id": "ddf89d81-42e3-4fd2-87e7-ade3dfe6508b"}, "6900c797-89e9-4c7c-878e-66c10cbf472b": {"doc_hash": "ca4c7c2fcea9b8fd300f7b77a2bc5ab521f4b9ac1eaa7441c4420284a40ee94b", "ref_doc_id": "f7b8a771-55c3-4786-9fae-d0961cc7037c"}, "1ccc00e9-8c48-4da1-a6d6-2871b3c699a4": {"doc_hash": "c21f7104e89c19a4ce9b59368361e1e983699f8fc2dd7a64581f9ec2cf894a56", "ref_doc_id": "e65d1dad-7de5-43d2-82f8-98e707fde569"}, "632d56f5-8e22-466d-9790-565f40fea6ea": {"doc_hash": "c7e554c7d9c514ccb5dcf4e8907a2b17092732cdf2cf447e14a1cac94fbc3087", "ref_doc_id": "07af7883-b891-48bc-af33-12b54e72227c"}, "b22b19c7-150a-461b-9594-35ca8bd26736": {"doc_hash": "d9662f23360779a12fc8658029b9af8eafc77abdfc90c5a7e7f3221bc368e187", "ref_doc_id": "8d44ce75-ea52-4b27-84d2-6d24f012363f"}, "6aef95e3-05b1-4077-82ff-cd503f2f506b": {"doc_hash": "2cf506e135903334f0dcc1eb8211a2b2a2440bb9d5c8a21fc42fe5f39c686f87", "ref_doc_id": "52f3d6ff-c4be-42b8-beb8-1f058b5989cc"}, "1cab73e6-2cc0-4317-9a9f-09e5077a1230": {"doc_hash": "a5316301247b27c4ff4817af386eacfb3da1a2d9322f4eccce573a76e874103c", "ref_doc_id": "f309fbed-a76b-4338-89ec-c3b58260fa85"}, "485987b1-19e4-4437-9230-91b21e0c76a9": {"doc_hash": "1c540432ec6bb43d872c8ca7d5c8d8db08aad8684e286f577daebe6192c1bb2f", "ref_doc_id": "faccc440-6628-4072-afa3-a0ce1d53e73b"}, "5b6259a8-5c31-4d69-98b1-46957ef52c5b": {"doc_hash": "5281047ec2063dd5f53b868034af3b1f4f75d1706ec76bbb195876e01802e729", "ref_doc_id": "6ad90067-a011-4e97-b645-e099824402f6"}, "6204fe7d-cad2-4a27-b61d-94a6baf41443": {"doc_hash": "c35006cf4cc5be0c5e0cbf9f030597b689c41884a58a954206720549cd339988", "ref_doc_id": "6a29bb7c-4052-4aeb-a145-4c5fbfbb61d7"}, "330b3064-327f-43c9-ad53-f8b4aecee689": {"doc_hash": "0196a4d8799ffbc27d208ea7b11dc87ac1711f5aa17f1a5a4174ff628f058bf4", "ref_doc_id": "de9a80eb-2c15-4aeb-a569-c917b2a1e662"}, "7091f64d-4e4e-4ae7-96fe-8e4f424f0c4d": {"doc_hash": "45609ae076d772ffc0a177c37bdb1b63ae84d22d208fe84dc6374889b5a8b067", "ref_doc_id": "f8e70d21-6bdd-44e9-b148-a85953d7f32e"}, "762c7ccd-6294-4f7f-988d-823b6f5712c0": {"doc_hash": "725fb763776d26d88e2325766504ee3c1590c8838b634795d78720110be9f517", "ref_doc_id": "3d7ff3fa-798a-4462-bb75-9cf66542fe3c"}, "96dec1a8-387a-4439-933a-115c7a6fb78f": {"doc_hash": "e698c19e8d6768e77696c47762b516023acda389a13179c867b7c0b530a5d291", "ref_doc_id": "993b4d8b-7060-4556-8c1c-a6ac3cb793b0"}, "09c6075c-0357-46cd-b212-df019ceb7e4e": {"doc_hash": "ecdf9efb3481e3b4f9cdc7cbe26b052cd6a616d4148b7352e81e5284833a247a", "ref_doc_id": "5618a944-1866-4b89-8fc3-6314eecffea8"}, "1af47ba0-b5ad-4433-b4a9-f2924754c124": {"doc_hash": "6ef2c500d7fe43e0b2748a4e1e9524233afcc94775a8a172d6f017b20b343e05", "ref_doc_id": "5c470945-250e-420b-ad21-d1ff50e8cfd6"}, "81dba120-e47a-46ce-9f55-d04a8fd0aa3b": {"doc_hash": "690f26090f37359907121f3ed9db922c4cb7d986b99b3c2bcb31030fda486e07", "ref_doc_id": "ee136f72-10be-4a10-872f-0d59f5cfaf5d"}, "8c14b1d0-a4e2-462b-970f-6e3abe2b1d28": {"doc_hash": "e2bbc938367a4fdb331d5b02e037b1f9c9d582337c85a133fafc7bee973e6e6c", "ref_doc_id": "f1fd88cb-0150-41a7-8e84-86a2c9650a49"}, "93530868-b077-4b5a-bc8e-e0130039a5a3": {"doc_hash": "cc41d558ea104213e526058586530bd75dd75cf6ff76e0f38e2615e1a62f0598", "ref_doc_id": "81ede3f4-f732-447c-ac26-75582cf97176"}, "61edf2bd-c984-49bd-94a3-8607bc4dd74a": {"doc_hash": "185a1a05bffa72648e2842d113ad4f8b0fb42ad98803b67a6f449ad08f5bc7e2", "ref_doc_id": "b1b7cd7e-41b6-42ca-8c60-7d16dc18e50a"}, "e79be5b5-4775-4cd9-86dc-d461516205cc": {"doc_hash": "4b4068a589fcdf8c595634fc2591a18003b82d84c7770b5e9064467c97edc40a", "ref_doc_id": "fedb07f4-ce5b-414b-bf85-d752a8e771f4"}, "d1e0002e-3613-43e1-9a22-dda6d822cfc9": {"doc_hash": "5c4839cb0d94d6b45fa7474b5337d8551f8625856b83a71ff15d6097c4010b72", "ref_doc_id": "c2811ee0-001b-4706-8168-e6c30302d471"}, "fe238974-fe68-40d9-820c-e47d579e781c": {"doc_hash": "2afc5039ea65b6536dd0a8c60e3a004fb501a7b7cd5c684bcd0889f960e7fb45", "ref_doc_id": "e7bdf128-97f4-4aae-8a94-138d4bdd61bb"}, "678c5d77-09ea-4895-bf43-ecc98365b53d": {"doc_hash": "393b4cbc334e6de603945da07a142fdca404960d0604b523df526be2157d4d44", "ref_doc_id": "bc8b03da-2120-40e3-90c8-a8864c9768f1"}, "d3765dcc-ecda-4a86-98c1-7f4ab02a627c": {"doc_hash": "6efb191977f4910e94c0846af8e368343e909d5c2491095e45163388d7e742c9", "ref_doc_id": "2485160d-36dc-4c4e-b708-e53d71c1bd98"}, "e2653753-e23f-4fcb-938a-2fe40369461e": {"doc_hash": "2f402537661d0e78c27de057344c859a5ffc2a33d4d35b7fa4f4d2d463a1ec2a", "ref_doc_id": "526c7439-2265-4009-bc9a-042915192a09"}, "e42f3415-4a69-464e-aa68-9c58d288ef40": {"doc_hash": "b7877c117fd49533853449cf44559329305ff8fa4bbc74e4e2ba1c6c3043199d", "ref_doc_id": "1ef78171-3202-4408-a42a-5d4130e9c6c2"}, "33535932-03c0-4c41-980e-1aaab4800bd5": {"doc_hash": "4443de49ef15812e9ca75180112f6028985592e6019c1adf7d71c5a4793e5841", "ref_doc_id": "12bb8d7c-95fb-4a19-8f4a-f474f4ee66c8"}, "040a5248-ce0f-4c08-a48c-eaa30427741f": {"doc_hash": "d3f1dc0d9af03019583851689df87c09a6fb16f20db21d001cc7929b910c133b", "ref_doc_id": "f185fc72-7abc-444f-adb7-65b72644f52a"}, "83eaf2fd-6d4d-4921-bf46-e11a26d29987": {"doc_hash": "dcd26eb3e60c08eedac834aa0496573b948b65fb6e9bd44c5343a054654437fb", "ref_doc_id": "6446ff8b-19b7-4370-9cce-e5f012654df2"}, "3430677b-4cd8-4e87-8ef0-e918e71e2306": {"doc_hash": "2d9630f59c7caae5c9c314fb8305c827db7298a31ed20f770cc5c27d8752bcf0", "ref_doc_id": "906bc828-2da8-495f-b373-b7a56ca0b297"}, "32978a76-a18f-4f61-8a70-e85cab62650a": {"doc_hash": "224c0128e6cb0e533f10347d0e9dc1116e99668b94741a5cd21831f925a5aeac", "ref_doc_id": "b964d3dd-f752-4a78-822c-ce267c586e71"}, "1ec82e3d-b47a-4be8-aa97-6a84b10ecf7c": {"doc_hash": "3100d6d1010d46ce33b867f60dedc53a4d52e025b897cb18e59fb2d34b1c878e", "ref_doc_id": "2336b549-333c-4dce-a5af-461a1547d7d6"}, "0fe383a2-9ce0-4024-8c63-3acafb474132": {"doc_hash": "dca673d42252f06c0ff2922c18d4b43394d1bb903b43eb3bb86a7add07a23e78", "ref_doc_id": "635f44da-7c4d-43b5-acbd-e11a712bfc50"}, "20d03db5-9268-4e28-91db-94a881743d62": {"doc_hash": "b2c4823ed307cca3a9c30078fef596116682851d1b9e12f9aa5d0ca29434aa4f", "ref_doc_id": "810ac4e4-781a-478d-b708-765191428c46"}, "d8e482d9-1905-4563-906b-649d56a1e98a": {"doc_hash": "2c80f2ba1e37d2b09ef87ec467f43eed5fd8cdced62fd9f939e81a3b3c6becf8", "ref_doc_id": "8099c798-3d18-4478-9447-1649b17aa827"}, "a60e8c12-bfa0-4162-8d80-fd8e42ddd32f": {"doc_hash": "170243988b2c9a5c0377e99a043c3aadb21f8de99a23d8fba5080390ce32fbd1", "ref_doc_id": "b28c5116-148d-4cb2-b1a7-20bab321cf51"}, "20ac1cca-52b9-45c2-84e1-a6cd2e2efd18": {"doc_hash": "c2fe6560092556ccfcd7f4f3aa74209f9f5941f1c5a510f02df1ecf72665927e", "ref_doc_id": "7c8415b0-c0f6-460b-817a-73e4be151854"}, "372b1c3b-59be-4651-bd66-0d0aacfbed62": {"doc_hash": "bed16a09a0533e0e809f9dd1b892584010e639184b3904144496890e1c6c7216", "ref_doc_id": "b90f47ab-0875-44fe-9c03-ee3ce58e6c24"}, "cb271ed7-8063-409b-b374-ca38d9d2bc54": {"doc_hash": "09a00200f86c177f8e2d2b734feef4024bf245c13e8eae74783b5821a9806e18", "ref_doc_id": "bd509720-d362-4a03-b338-4a666df1c27d"}, "94aca33c-0bf8-4c9e-8452-c9f281c1372c": {"doc_hash": "141336818d3e4b581d317bf75a20e1f936b1a25a30c20bf90865722e9f346013", "ref_doc_id": "07f05a6c-71ee-4890-8482-70abed864d12"}, "9fcef31d-efcb-464e-b059-f05fb557e538": {"doc_hash": "321e9840247989b3d3ed2185b5e983aa61815ecd8e279bc6a7f7451c28ddec2e", "ref_doc_id": "c094c12f-1872-4230-9db3-663177fec3a3"}, "34c9bd60-35dc-45f7-9dc5-751c6cf4fc3b": {"doc_hash": "84a642673d132f176d6eda47caac5d16d5ba2acb6c3fdd186bec15227f98abb2", "ref_doc_id": "50d0329f-e7ad-4e8a-9212-ed0c13e70545"}, "594204f0-b409-4f3f-b09b-b04aaeef930c": {"doc_hash": "960f1cd95392d4fd9f6eddad2d8b36f46c7f1baeb1e797cf0f5b317c8b071797", "ref_doc_id": "344920e6-8a58-4db3-a16f-9343b93a2be5"}, "21d8689e-ad02-4113-9540-a6b30a937c3f": {"doc_hash": "9317b8d2caa870cef34d3615a9859eb46006cc71e5fac9f9fd25e637d9568ff3", "ref_doc_id": "594e3194-73dd-4992-9132-b9ebd719cd04"}, "fbe343c1-b0f8-445f-a6c6-f8cf6ce8a398": {"doc_hash": "a66f7f116816e25461fae90d96507c8f822a8f73395c3c5fb2abb5358ee130d5", "ref_doc_id": "45a76e81-0eaf-4c4a-8df7-0e20869336ff"}, "de2c13d9-5c04-4418-88d3-5a5d54965114": {"doc_hash": "88503523cb73443431377a055f4a59ce432d66b7a15b63155b38967d0cb7524b", "ref_doc_id": "5751c887-f7b6-4adf-82b7-52b1d8e9b490"}, "2ac1d1d1-77d5-4164-a84a-f68051f203bc": {"doc_hash": "86149ea747a1e13a738f51bed3d4685b62dd93becc548ffd43a44a4c29719dcc", "ref_doc_id": "9d7405eb-105b-4067-9c86-d5ec0fd63c7a"}, "05b4cf75-2217-48be-b451-4ac3ffded763": {"doc_hash": "029d38e56c31737d793732f94373e29bae6454b0425225200e99345957c4e3e0", "ref_doc_id": "d633ffc0-145b-480d-9051-e14b5e6e3c2c"}, "bff13d08-2689-4fb5-b596-e9039b4df38d": {"doc_hash": "c4b20f4ef33537348bdd99b4052bbdc8a39ff9d0e5cfa11ac2800fe3ecfdc514", "ref_doc_id": "630f92dc-b28f-4bf4-bbc1-de92a604305a"}, "1c5c27e5-9e75-48e0-be74-48f003f326a8": {"doc_hash": "2a11c2c008219143ef133366d7517948826a3a7413d56b9c1ccf12592539c7a2", "ref_doc_id": "c242fcff-2699-4f7f-ac50-22fcd43951ad"}, "e8af4f38-7fdd-4078-ad4e-153b1789f40e": {"doc_hash": "ae5f4201593b4186c7618271cc3d22941c0f266b7c550f01784501a65cb5b4c9", "ref_doc_id": "57a84c72-4095-45df-935e-d30a61a704e7"}, "487dd13a-075b-4673-a1f2-45b7af8bcecd": {"doc_hash": "087e08b6264fc2ea9e428a6fb50c7c3bef9dfcb57ab33f6b4479f769dacdf2f3", "ref_doc_id": "cc768538-b7db-493c-a5e8-908d4d93adf4"}, "5f0c37aa-0084-48cf-801b-afacfbc392f7": {"doc_hash": "7664c31d048f6d434d03d4f4e093e0cb8a761bd079f8da323dd82f3b9bb8eb7a", "ref_doc_id": "cbcae74f-a7ff-4d6c-8c63-4459faec75e4"}, "808ba32d-4e16-4cd7-ad78-83fb4c35e8db": {"doc_hash": "d7c8cbfaa4433d97d9bfab0566fc876952660a09f3874b52f150574e93eb95f7", "ref_doc_id": "837c2796-ac36-4382-9181-318604ae0185"}, "65877f36-ac40-4dc4-acd3-9f4c836fddaf": {"doc_hash": "416efa47798222cb5b31ebdf651403861c108453efe666b9c0a6bf6e45d7b1dc", "ref_doc_id": "b04ce058-9be5-499f-be8d-19035dc76ead"}, "c2f9015c-365b-460f-8f02-5a371ce1b0b6": {"doc_hash": "e35f9926b892eb0416a01aaabfea6fcbc0b1760e71451f92447b3392cb397424", "ref_doc_id": "1eb27764-2236-456e-8169-d96029185ce7"}, "332aabdd-43e9-47aa-8a6f-b1f89bafc2ad": {"doc_hash": "4305d26179665aafd56b25c0e6ff77bad7e80ac9becf2744224743c42141f6d1", "ref_doc_id": "30f6d311-d142-4cf4-b5fc-cf7f84df56b4"}, "71c7acc8-47e1-4f4f-9a34-586e7b515544": {"doc_hash": "37726e9cfc3a6f5b68ea268ca25bdb8a527897aaf21f3f9a03f57c77e7549f60", "ref_doc_id": "7e86b0c9-5361-4e82-80b7-f489bffdb3cc"}, "6142703b-0ed1-479e-96b1-c98b3e1a0d4d": {"doc_hash": "e94d4cd1d38a0c6abc7c82918f36822ab893ab52d886baa2e717a458d319cab1", "ref_doc_id": "ec0f081e-83c2-4ed3-a8e0-5a574244062c"}, "f46537ed-2155-4144-bb86-d1aec15ef694": {"doc_hash": "7fcb4e01650559b7f62ebd5772b459c72ce5fe9369d1a0497c79e60a22cebe06", "ref_doc_id": "a58ac901-5cee-4507-a631-88147eeaeabd"}, "ae5c5f73-c620-4532-8d15-4a2715a4ba21": {"doc_hash": "b28152f226b5f79bf85685dfa9b7579ce86bded033d000545b570f89acc71e08", "ref_doc_id": "db0dd6b2-751b-401c-b9c0-77f273d7d710"}, "d36ed4ca-7f76-410b-839d-3bfb71e3d342": {"doc_hash": "89ad87e8d822b314ecf72bf636d66ed9118e7057f4c675f21aca6305feb982b1", "ref_doc_id": "0b7c960c-d73d-4a30-bc9a-6d14be87d4f9"}, "8751f5c4-de8d-4c7f-9404-40caeec6c92d": {"doc_hash": "2e6f6a7ac6d0976c7c547ca7ab09c8996568968aec535f7dc2a796f2c1066842", "ref_doc_id": "cba1e246-8ed7-41e3-8293-2219d3569257"}, "8ce96670-64ea-463c-81a7-7611d668f8b9": {"doc_hash": "1a563f0b9e62014fa7da839f29390c427c9aa3df6fc198afb32edfd1402cecd2", "ref_doc_id": "0995487d-cb61-4dc5-bd25-a093d316a164"}, "7d23e98c-5b89-4a9f-931d-013414a917ad": {"doc_hash": "4be15df536e683ec936138cedd2f3f00fa98fdb24e1905f927052fba86ff1e1d", "ref_doc_id": "1d05331a-8447-481b-b1d4-61e5259f7da1"}, "667fe508-f45d-4088-89da-6a6f03f3328b": {"doc_hash": "6cad8a1fb754b5d7fd17aca322b944a703b274b6b33c6bd9731103329c69b84a", "ref_doc_id": "2856f417-443d-4777-8acb-545a6d3b473d"}, "b490d51a-45a2-4a63-ad64-e75d5d0b4595": {"doc_hash": "eb5c00f355babbc3b1567e243ca88fe16c98fb5a454f795c3e8f4b6c471ae1de", "ref_doc_id": "8a137674-7a39-44bc-9ed0-713d9a1235a4"}, "96e72234-a1c1-49d0-929d-d376f5f7061a": {"doc_hash": "46d8bccc44d918cd237c9fdaed143a3691f51c66b7b15d9acb376f94d1f7d45b", "ref_doc_id": "0009942b-510a-436f-a3f5-d49c412ea020"}, "134e17bd-d3d0-468d-95d3-7a567b2dc1d4": {"doc_hash": "52ce884086459ba7e58f884509a072d7a96a93d1f1c1aac42617f9fe1ccc9a8e", "ref_doc_id": "a8a8c6f6-03ec-4fb7-963c-0bb9c54c2f34"}}, "docstore/data": {"7d90e3f7-7cd7-46bc-b64d-cbfa6a020b25": {"__data__": {"id_": "7d90e3f7-7cd7-46bc-b64d-cbfa6a020b25", "embedding": null, "metadata": {"file_path": "../data/txt_files/getting_started.txt", "file_name": "getting_started.txt", "file_type": "text/plain", "file_size": 2360, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86f3f6f4-e516-4a7f-9d25-4e3849b48410", "node_type": "4", "metadata": {"file_path": "../data/txt_files/getting_started.txt", "file_name": "getting_started.txt", "file_type": "text/plain", "file_size": 2360, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "hash": "59b7e42994fa1a7bde1ddd6db7021c365104e672b61de2a11d939a1ab0979b6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fdd13b16-14b7-406d-936b-4f0e7dbf5ad4", "node_type": "1", "metadata": {}, "hash": "c63d8908d63a05080a30036e2ba7372daa7174b1cd734c12222ad3fce8bc0091", "class_name": "RelatedNodeInfo"}}, "text": "Getting started with Shopify\n\nWhat is Shopify and how does it work?\nShopify is a complete commerce platform that lets you start, grow, and manage a business.\n\nCreate and customize an online store\n\nSell in multiple places, including web, mobile, social media, online marketplaces, brick-and-mortar locations, and pop-up shops\n\nManage products, inventory, payments, and shipping\n\nShopify is completely cloud-based and hosted, which means you don\u2019t have to worry about upgrading or maintaining software or web servers. This gives you the flexibility to access and run your business from anywhere with an internet connection.\n\nHow much does Shopify cost?\nTry Shopify free for 3 days, no credit card required.\n\nAfter your trial expires, choose a pricing plan that suits the size and stage of your business.\n\nCan I use my own domain name with Shopify?\nYes, you can use your own domain name with Shopify.\n\nIf you have an existing domain name, you can connect it to Shopify from your store\u2019s admin. Learn more about connecting an existing domain to a Shopify store.\n\nIf you don\u2019t have a domain name yet, you can either buy one through Shopify or a third-party provider.\n\nDo I need to be a designer or developer to use Shopify?\nNo, you don\u2019t need to be a designer or developer to use Shopify.\n\nCustomize the look and feel of your store with the online store builder and themes.\n\nAdd features and functionality to your store with apps.\n\nIf you need extra help, you can contact our support team, or visit the Shopify Expert Marketplace to search for and hire a certified Shopify expert.\n\nIn what countries can I use Shopify?\nYou can use Shopify in nearly every country in the world.\n\nWhich languages does Shopify support?\nThe customer-facing parts of your Shopify store, including ecommerce website, blog, checkout, and emails can be in any language if the theme supports it. Learn more and explore our themes.\n\nThe admin of your Shopify store is currently available in English, Chinese (Simplified), Chinese (Traditional), Czech, Danish, Dutch, Finnish, French, German, Italian, Japanese, Korean, Norwegian, Polish, Portuguese (Brazil), Portuguese (Portugal), Spanish, Swedish, Thai, and Turkish.\n\nDo I need to ship items myself?\nNo, you don\u2019t need to ship items yourself. You can use a third-party fulfilment service to prepare and ship your orders for you.", "start_char_idx": 0, "end_char_idx": 2348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdd13b16-14b7-406d-936b-4f0e7dbf5ad4": {"__data__": {"id_": "fdd13b16-14b7-406d-936b-4f0e7dbf5ad4", "embedding": null, "metadata": {"file_path": "../data/txt_files/payments.txt", "file_name": "payments.txt", "file_type": "text/plain", "file_size": 621, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8134e5bb-5cfe-4f70-96cd-69c30ce41d1f", "node_type": "4", "metadata": {"file_path": "../data/txt_files/payments.txt", "file_name": "payments.txt", "file_type": "text/plain", "file_size": 621, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "hash": "04a23fea6580315f6648e034eea8d236da9de985c4b579370c1fa3948b8d0cd3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d90e3f7-7cd7-46bc-b64d-cbfa6a020b25", "node_type": "1", "metadata": {"file_path": "../data/txt_files/getting_started.txt", "file_name": "getting_started.txt", "file_type": "text/plain", "file_size": 2360, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "hash": "4e1adb5679adbadfa4dabd45e404748ae5ab21c0ac77ed7ff82080cb486bfbd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b99caea3-a960-49e3-b455-bd0949986560", "node_type": "1", "metadata": {}, "hash": "d4d6dbfb23e647f43873d2dd1a539de795e5fcafe84b59176babbb4306084746", "class_name": "RelatedNodeInfo"}}, "text": "Payments on Shopify\n\nWhat is a third-party payment processor?\nA third-party payment processor (also knows as a payment provider or payment gateway) lets you accept online payments.\n\nWhat currencies does Shopify work with?\nYou can sell and accept payments in many currencies, depending on what payment provider (also known as third party payment processors or payment gateways) you use. For more information, you can view a list of supported payment gateways.\n\nWhat is a merchant account?\nA merchant account is an account where your money is deposited after your customers\u2019 payments have been authorized and processed.", "start_char_idx": 0, "end_char_idx": 617, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b99caea3-a960-49e3-b455-bd0949986560": {"__data__": {"id_": "b99caea3-a960-49e3-b455-bd0949986560", "embedding": null, "metadata": {"file_path": "../data/txt_files/selling.txt", "file_name": "selling.txt", "file_type": "text/plain", "file_size": 1137, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38eae104-6adf-4c22-bd0f-73ee6881a43c", "node_type": "4", "metadata": {"file_path": "../data/txt_files/selling.txt", "file_name": "selling.txt", "file_type": "text/plain", "file_size": 1137, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "hash": "bd2afa44537bc52f2e4b55df4b94206634f2f8f6b6dda5cb9f1fecaaeea7d774", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdd13b16-14b7-406d-936b-4f0e7dbf5ad4", "node_type": "1", "metadata": {"file_path": "../data/txt_files/payments.txt", "file_name": "payments.txt", "file_type": "text/plain", "file_size": 621, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "hash": "66bff08dd56e0dd87decf427a37af8153f33132b43abbf33bf3a1bb8193adc41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a377b391-6fd5-44da-9bfe-8d4a6f01010b", "node_type": "1", "metadata": {}, "hash": "89d53e19203177b555d8e313f74e1e9d4d5e558e3ba2e5e7cfe5d805ebcfa4ec", "class_name": "RelatedNodeInfo"}}, "text": "Selling on Shopify\n\nWhat do I need to start selling on Shopify?\nTo start selling on Shopify, you\u2019ll need a Shopify plan and products to sell.\n\nGet started by signing up for Shopify. Then set up your store and add your products.\n\nIf you don\u2019t have products to sell yet, dropshipping might be a good option for you.\n\nWhere can I sell with Shopify?\nShopify lets you sell almost anywhere your customers are, including online, in-person, online marketplaces, and social media.\n\nWhat is dropshipping, and how can I dropship with Shopify?\nA dropshipping business is one where the business owner lists, but doesn\u2019t own, keep, or ship inventory. When the store sells a product, it purchases the item from a third party--usually a manufacturer or wholsesaler--who then ships it to the customer directly. This means there are no upfront inventory costs for the business owner.\n\nTo start dropshipping with Shopify, sign up for a free trial and install the Oberlo app.\n\nWhat happens when I receive an order?\nDepending on your preferences, you\u2019ll receive an email, mobile app notification, or RSS notification every time your receive an order.", "start_char_idx": 0, "end_char_idx": 1129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a377b391-6fd5-44da-9bfe-8d4a6f01010b": {"__data__": {"id_": "a377b391-6fd5-44da-9bfe-8d4a6f01010b", "embedding": null, "metadata": {"file_path": "../data/txt_files/test.txt", "file_name": "test.txt", "file_type": "text/plain", "file_size": 52, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98892e1e-69b7-4f52-9c48-e3ad24f0b172", "node_type": "4", "metadata": {"file_path": "../data/txt_files/test.txt", "file_name": "test.txt", "file_type": "text/plain", "file_size": 52, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "hash": "ac683d39694559e69b886234bc4d4d258798e72b8c0997aa53d4ec985ec99642", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b99caea3-a960-49e3-b455-bd0949986560", "node_type": "1", "metadata": {"file_path": "../data/txt_files/selling.txt", "file_name": "selling.txt", "file_type": "text/plain", "file_size": 1137, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "hash": "bd2afa44537bc52f2e4b55df4b94206634f2f8f6b6dda5cb9f1fecaaeea7d774", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f407e1dd-e050-4658-a272-c982afb4a0af", "node_type": "1", "metadata": {}, "hash": "02e7e6030428c611672f4cb194c3c269288c116ae317ae80ca32917d080dead2", "class_name": "RelatedNodeInfo"}}, "text": "Vaibhav, Karan and Sohil are the founders of Helios", "start_char_idx": 0, "end_char_idx": 51, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f407e1dd-e050-4658-a272-c982afb4a0af": {"__data__": {"id_": "f407e1dd-e050-4658-a272-c982afb4a0af", "embedding": null, "metadata": {"page_label": "1", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8adba8fe-16fb-42aa-bdfe-5c3bdfbde10e", "node_type": "4", "metadata": {"page_label": "1", "file_name": "ANN.pdf"}, "hash": "91f83543ec63b5c5c34c1a2d99ce9b5f964efee2fc95a7301810660fd6d761a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a377b391-6fd5-44da-9bfe-8d4a6f01010b", "node_type": "1", "metadata": {"file_path": "../data/txt_files/test.txt", "file_name": "test.txt", "file_type": "text/plain", "file_size": 52, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}, "hash": "50da2f704685d97d5330145972d18a7a4dc1e6f93b407f15551ed66e7ef1537d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c300f015-c1a2-4262-861e-02b10b4ca7f9", "node_type": "1", "metadata": {}, "hash": "9c9723172269d9186c8f74fbd549e0051d0e1797df756b44050e946491cedc26", "class_name": "RelatedNodeInfo"}}, "text": "APS360: Applied Fundamentals of Deep Learning \nWeek 2: Artificial Neural Networks", "start_char_idx": 0, "end_char_idx": 81, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c300f015-c1a2-4262-861e-02b10b4ca7f9": {"__data__": {"id_": "c300f015-c1a2-4262-861e-02b10b4ca7f9", "embedding": null, "metadata": {"page_label": "2", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f5b32922-730e-43dd-90de-79764f5d889a", "node_type": "4", "metadata": {"page_label": "2", "file_name": "ANN.pdf"}, "hash": "c72bf52d5bb9a5d629bbdc4ef2d0c4fb6aa76845ea04d17ad160d27d30dc3f9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f407e1dd-e050-4658-a272-c982afb4a0af", "node_type": "1", "metadata": {"page_label": "1", "file_name": "ANN.pdf"}, "hash": "54f5d02b2f4ecc398d4287e509f33980baa14b87d317cc65c50c8256d03ea094", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2e9ca89-e69c-4a75-a07e-8dba34d925c8", "node_type": "1", "metadata": {}, "hash": "66e9095dd3092e40f37e15d4c5a63a42f5157044530883cf9012c5218bd1d67b", "class_name": "RelatedNodeInfo"}}, "text": "Content \n\u25cfNeuron \n\u25cfActivation Function \n\u25cfTraining an Artificial Neuron \n\u25cfLoss Functions \n\u25cfGradient Descent \n\u25cfNeural Network Architectures", "start_char_idx": 0, "end_char_idx": 137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2e9ca89-e69c-4a75-a07e-8dba34d925c8": {"__data__": {"id_": "c2e9ca89-e69c-4a75-a07e-8dba34d925c8", "embedding": null, "metadata": {"page_label": "3", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e84629ac-31cf-4771-9f78-b1ffdfa4fe4a", "node_type": "4", "metadata": {"page_label": "3", "file_name": "ANN.pdf"}, "hash": "3663f0a83ffcd4e53813465d1aa310c810e79cce5bb4555dae85737b337c0db0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c300f015-c1a2-4262-861e-02b10b4ca7f9", "node_type": "1", "metadata": {"page_label": "2", "file_name": "ANN.pdf"}, "hash": "a0d63d18365fc3f0f3e6319ca1da70746ddfb362f8bc8d67ba89cf52c8128bcd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21168925-3258-4b51-aa4c-c53b8f42d9e6", "node_type": "1", "metadata": {}, "hash": "32be6ca452cdc5269d0798ab693e7c39336d65d435cb0de38977aa81c7aad072", "class_name": "RelatedNodeInfo"}}, "text": "Neuron", "start_char_idx": 0, "end_char_idx": 6, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21168925-3258-4b51-aa4c-c53b8f42d9e6": {"__data__": {"id_": "21168925-3258-4b51-aa4c-c53b8f42d9e6", "embedding": null, "metadata": {"page_label": "4", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e0494a39-ac6a-41c8-95d1-52cbc714168c", "node_type": "4", "metadata": {"page_label": "4", "file_name": "ANN.pdf"}, "hash": "8e7186b458e8e1e005444aca091bcd2f59c80c69323ce6713be146cdb03fb88f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2e9ca89-e69c-4a75-a07e-8dba34d925c8", "node_type": "1", "metadata": {"page_label": "3", "file_name": "ANN.pdf"}, "hash": "f877bfd944d405491b25999943c7c17a8c999c272ec0f5f3d2b1639e6936e22d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5faa3d7-bde6-4785-a697-ad6eed0b3c64", "node_type": "1", "metadata": {}, "hash": "0327655100d4f176afea76c5f88eda037cb12537ccdc9334937bec702afd11fb", "class_name": "RelatedNodeInfo"}}, "text": "Simplified Biological Neuron \nDendrites receive information from other \nneurons. \nCell body consolidates information from the \ndendrites. \nAxon passes information to other neurons.", "start_char_idx": 0, "end_char_idx": 180, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a5faa3d7-bde6-4785-a697-ad6eed0b3c64": {"__data__": {"id_": "a5faa3d7-bde6-4785-a697-ad6eed0b3c64", "embedding": null, "metadata": {"page_label": "5", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ad6bb7b-9f14-4910-9959-00704a907387", "node_type": "4", "metadata": {"page_label": "5", "file_name": "ANN.pdf"}, "hash": "8f3e831ce1b2ed3aeb9307122a3615c3bfa1c9ca5a8200e8c17be32d32566f5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21168925-3258-4b51-aa4c-c53b8f42d9e6", "node_type": "1", "metadata": {"page_label": "4", "file_name": "ANN.pdf"}, "hash": "744a4f528864f672224b32cc32b78872cee1301a940a4811caac5ea0ef9a54c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ad5d385-1b47-4471-a726-f43ff15ced42", "node_type": "1", "metadata": {}, "hash": "14185d072cb04862a00fabe3d953bccaf9cfac80d2b0425aef918cfe130c6bb4", "class_name": "RelatedNodeInfo"}}, "text": "Simplified Biological Neuron \nDendrites receive information from other \nneurons. \nCell body consolidates information from the \ndendrites. \nAxon passes information to other neurons. \nSynapse is the area where the axon of one \nneuron and the dendrite of another connect.", "start_char_idx": 0, "end_char_idx": 268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ad5d385-1b47-4471-a726-f43ff15ced42": {"__data__": {"id_": "4ad5d385-1b47-4471-a726-f43ff15ced42", "embedding": null, "metadata": {"page_label": "6", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "66a66ade-a22d-4c75-87ac-70283eb4c072", "node_type": "4", "metadata": {"page_label": "6", "file_name": "ANN.pdf"}, "hash": "81de05a1ba05260b801d596a65bcf8a8c6a5009d886f85f8fb5104396048b2e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5faa3d7-bde6-4785-a697-ad6eed0b3c64", "node_type": "1", "metadata": {"page_label": "5", "file_name": "ANN.pdf"}, "hash": "2e8c1166321cd562bd20fc40c0243ff622d79993bdb9f069d2473ea6fe7b5b24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62b89611-8377-4594-8c2a-a68803831667", "node_type": "1", "metadata": {}, "hash": "d70a586c9e94e91b67e002e9186f7b8ad040f1c9deb22f27d4501acf83d17327", "class_name": "RelatedNodeInfo"}}, "text": "Simplified Biological Neuron \nDendrites receive information from other \nneurons. \nCell body consolidates information from the \ndendrites. \nAxon passes information to other neurons. \nSynapse is the area where the axon of one \nneuron and the dendrite of another connect. \nNeurons fire on stimuli like: edges, lines, \nangles, movements, familiar faces etc. \nregardless of scale, rotation and translation!", "start_char_idx": 0, "end_char_idx": 401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62b89611-8377-4594-8c2a-a68803831667": {"__data__": {"id_": "62b89611-8377-4594-8c2a-a68803831667", "embedding": null, "metadata": {"page_label": "7", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c428d2bf-b75f-4016-98b6-d6835116de7c", "node_type": "4", "metadata": {"page_label": "7", "file_name": "ANN.pdf"}, "hash": "7e9f34f6ad972773706dd3d3c7a2d9af2b1bf61e5172d0831284ae4094c4a68f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ad5d385-1b47-4471-a726-f43ff15ced42", "node_type": "1", "metadata": {"page_label": "6", "file_name": "ANN.pdf"}, "hash": "217aff30501c6f493234861a574b25603297c30cb0c9f23626f0acb9c365fdf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b93e878-9bb4-43c9-9a8c-426fb8de0c4a", "node_type": "1", "metadata": {}, "hash": "fc4c851cc7ea271db752cff0a59dceaa67c7a474d0291047efadd509499c2640", "class_name": "RelatedNodeInfo"}}, "text": "Artificial Neuron \nxi is the input  such as a pixel in an image \nwi is the weight  for input  xi that we learn for this \nparticular input \nb is the bias , a weight we learn with no input \nf is the activation function  that determines how our \noutput changes with the sum of all weight-input \nproducts \ny is the output  such as the class an image belongs to", "start_char_idx": 0, "end_char_idx": 356, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b93e878-9bb4-43c9-9a8c-426fb8de0c4a": {"__data__": {"id_": "9b93e878-9bb4-43c9-9a8c-426fb8de0c4a", "embedding": null, "metadata": {"page_label": "8", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a24ab97d-4e5a-44b4-8893-6fd149413595", "node_type": "4", "metadata": {"page_label": "8", "file_name": "ANN.pdf"}, "hash": "985fa55454ab945980d23f4b843ebd6e206013fbf89c62981e4d081aa790a541", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62b89611-8377-4594-8c2a-a68803831667", "node_type": "1", "metadata": {"page_label": "7", "file_name": "ANN.pdf"}, "hash": "193128e2f8c6f0728fd4ad17db4c1e6a6974a0274106cf385d5e84f0c15ded81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dae4284f-52e6-4e53-a90d-af3fa10af2e7", "node_type": "1", "metadata": {}, "hash": "a2bdbeaa79f47738e74c801277008a935d29dc87e12943c14d40fb30b346ddc5", "class_name": "RelatedNodeInfo"}}, "text": "Artificial Neuron \nxi is the input  such as a pixel in an image \nwi is the weight  for input  xi that we learn for this \nparticular input \nb is the bias , a weight we learn with no input \nf is the activation function  that determines how our \noutput changes with the sum of all weight-input \nproducts \ny is the output  such as the class an image belongs to \ny = f( w\u22c5x+b) \nThis equation looks vaguely familiar...", "start_char_idx": 0, "end_char_idx": 412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dae4284f-52e6-4e53-a90d-af3fa10af2e7": {"__data__": {"id_": "dae4284f-52e6-4e53-a90d-af3fa10af2e7", "embedding": null, "metadata": {"page_label": "9", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d7656ccf-2042-4248-b77c-beacbbeb8a58", "node_type": "4", "metadata": {"page_label": "9", "file_name": "ANN.pdf"}, "hash": "30b925b6de8c09dac74943f6c3cd889dc73e17f7323a03ddbce480ff6628dc3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b93e878-9bb4-43c9-9a8c-426fb8de0c4a", "node_type": "1", "metadata": {"page_label": "8", "file_name": "ANN.pdf"}, "hash": "0fb9aa1f7710b1fc629549d9976175f9d2a42973ae736ea2fd9f76dcf2012bfe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "021b95ca-9e6b-4a94-b67f-c3b52f2fb7b9", "node_type": "1", "metadata": {}, "hash": "16420646193afcfa8db2cd8c672bffaeea613f48156659162553cf26aa9859db", "class_name": "RelatedNodeInfo"}}, "text": "Activation Function", "start_char_idx": 0, "end_char_idx": 19, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "021b95ca-9e6b-4a94-b67f-c3b52f2fb7b9": {"__data__": {"id_": "021b95ca-9e6b-4a94-b67f-c3b52f2fb7b9", "embedding": null, "metadata": {"page_label": "10", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52f95bc0-31bb-4ef1-ae72-5e0172880f49", "node_type": "4", "metadata": {"page_label": "10", "file_name": "ANN.pdf"}, "hash": "961a4fe821b50046254423d9c5903b95236e882cc47c61dfef6bc330ba53927b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dae4284f-52e6-4e53-a90d-af3fa10af2e7", "node_type": "1", "metadata": {"page_label": "9", "file_name": "ANN.pdf"}, "hash": "a55ab5ab17836705b3416cd222d70cc40fdf8f0626b6f96cb070aabcbb5c7898", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82ad9044-2e82-44b5-aff9-dd7bcadc980d", "node_type": "1", "metadata": {}, "hash": "c7d61d4a4b6f75cd2a2203e137b0970f8a490cfb6e10283fd2f8add926b91336", "class_name": "RelatedNodeInfo"}}, "text": "Linear Activation Function \nSuppose the activation function is a simple linear function \n                                 y = f( w\u22c5x+b)               y = w\u22c5x+b", "start_char_idx": 0, "end_char_idx": 159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82ad9044-2e82-44b5-aff9-dd7bcadc980d": {"__data__": {"id_": "82ad9044-2e82-44b5-aff9-dd7bcadc980d", "embedding": null, "metadata": {"page_label": "11", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ddf89d81-42e3-4fd2-87e7-ade3dfe6508b", "node_type": "4", "metadata": {"page_label": "11", "file_name": "ANN.pdf"}, "hash": "3c5476b480993b58ec525f2c8b7fb3e83d7f1dbcbea5cbeb6ae7f78bcddc2845", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "021b95ca-9e6b-4a94-b67f-c3b52f2fb7b9", "node_type": "1", "metadata": {"page_label": "10", "file_name": "ANN.pdf"}, "hash": "b4c2a972f2561012f770c5125a5441c471456ecdbbf0fce32c4c35d697dbea19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6900c797-89e9-4c7c-878e-66c10cbf472b", "node_type": "1", "metadata": {}, "hash": "19201fbe1889d8c39eb401a9d0d5281d43806928cd2bb032102e4d214823bd41", "class_name": "RelatedNodeInfo"}}, "text": "Linear Activation Function \nSuppose the activation function is a simple linear function \n                                 y=f( w \u22c5x+b)                y=w \u22c5x+b\nThis is a special equation, more clear if we write it out for 2D: \ny = w0x0+w1x1+ b\nRecall general equation of line: Ax+By-C=0", "start_char_idx": 0, "end_char_idx": 285, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6900c797-89e9-4c7c-878e-66c10cbf472b": {"__data__": {"id_": "6900c797-89e9-4c7c-878e-66c10cbf472b", "embedding": null, "metadata": {"page_label": "12", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f7b8a771-55c3-4786-9fae-d0961cc7037c", "node_type": "4", "metadata": {"page_label": "12", "file_name": "ANN.pdf"}, "hash": "4d11e20cf5f3c6dd5de797ad2a9918ec95b5951b2b58cf16e794e895851181cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82ad9044-2e82-44b5-aff9-dd7bcadc980d", "node_type": "1", "metadata": {"page_label": "11", "file_name": "ANN.pdf"}, "hash": "003f407751f2f1da9c4b2d93a972b7a18d8f4145e10abaf6165b873d630d807b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ccc00e9-8c48-4da1-a6d6-2871b3c699a4", "node_type": "1", "metadata": {}, "hash": "eb7a2f56988604ec4f65b73419d51b3ff06316563fc3aaf6f11af0aa0bef6b1c", "class_name": "RelatedNodeInfo"}}, "text": "Linear Activation Function \nSuppose the activation function is a simple linear function \n                                 y=f( w \u22c5x+b)                y=w \u22c5x+b\nThis is a special equation, more clear if we write it out for 2D: \ny = w0x0+w1x1+ b\nRecall general equation of line: Ax+By-C=0 \nThe bias is related to the offset of the line from the origin \ny=w \u22c5x+b is a generalized line for any dimension, known as a \nhyperplane , splitting the n-dimensional input space into 2", "start_char_idx": 0, "end_char_idx": 471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ccc00e9-8c48-4da1-a6d6-2871b3c699a4": {"__data__": {"id_": "1ccc00e9-8c48-4da1-a6d6-2871b3c699a4", "embedding": null, "metadata": {"page_label": "13", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e65d1dad-7de5-43d2-82f8-98e707fde569", "node_type": "4", "metadata": {"page_label": "13", "file_name": "ANN.pdf"}, "hash": "a8a12937c3b188e9c624b5972ef7f5b5d017c4ed203e695d814c4f5fa7c2ea91", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6900c797-89e9-4c7c-878e-66c10cbf472b", "node_type": "1", "metadata": {"page_label": "12", "file_name": "ANN.pdf"}, "hash": "ca4c7c2fcea9b8fd300f7b77a2bc5ab521f4b9ac1eaa7441c4420284a40ee94b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "632d56f5-8e22-466d-9790-565f40fea6ea", "node_type": "1", "metadata": {}, "hash": "73a40fdda8a9fb0457435fd8d1900876166aca4649eade7e5c9b645c1f14d4fb", "class_name": "RelatedNodeInfo"}}, "text": "Neuron with a Linear Activation Function \nWhat's wrong with a linear activation function? \n\u25cf Most real datasets are not linearly separable , e.g. we can't find a \nline that separates classes well in a classification problem \n\u25cf We can learn non-linear transformations of our data to help \n\u25cf Multiple layers with non-linear transformations help \n\u25cf No advantage from multiple linear layers  (composite is a linear \nlayer) \nhttps://sebastianraschka.com/Articles/2014_naive_bayes_1.html", "start_char_idx": 0, "end_char_idx": 481, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "632d56f5-8e22-466d-9790-565f40fea6ea": {"__data__": {"id_": "632d56f5-8e22-466d-9790-565f40fea6ea", "embedding": null, "metadata": {"page_label": "14", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "07af7883-b891-48bc-af33-12b54e72227c", "node_type": "4", "metadata": {"page_label": "14", "file_name": "ANN.pdf"}, "hash": "e8a83bdd6a890a929f0702360f9a723c7b1505e6c314d4ae02b807e78d640f32", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ccc00e9-8c48-4da1-a6d6-2871b3c699a4", "node_type": "1", "metadata": {"page_label": "13", "file_name": "ANN.pdf"}, "hash": "c21f7104e89c19a4ce9b59368361e1e983699f8fc2dd7a64581f9ec2cf894a56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b22b19c7-150a-461b-9594-35ca8bd26736", "node_type": "1", "metadata": {}, "hash": "8b056708df290d4d5998bc37ebfcc63d8938f3d40f3b2171a35c666fe22f4ed3", "class_name": "RelatedNodeInfo"}}, "text": "Early Activation Functions: Perceptrons \nFirst artificial neurons (1943-70s) used a simple binary \nactivation function based on which side of the \nhyperplane the input is: \nThis is called the decision boundary \nSign function \nHeaviside (unit) step function", "start_char_idx": 0, "end_char_idx": 256, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b22b19c7-150a-461b-9594-35ca8bd26736": {"__data__": {"id_": "b22b19c7-150a-461b-9594-35ca8bd26736", "embedding": null, "metadata": {"page_label": "15", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d44ce75-ea52-4b27-84d2-6d24f012363f", "node_type": "4", "metadata": {"page_label": "15", "file_name": "ANN.pdf"}, "hash": "12dc32e642dbfcde3ddc25f56cbacce32fd0eddfec3c1a37a7c5aabe1fc948bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "632d56f5-8e22-466d-9790-565f40fea6ea", "node_type": "1", "metadata": {"page_label": "14", "file_name": "ANN.pdf"}, "hash": "c7e554c7d9c514ccb5dcf4e8907a2b17092732cdf2cf447e14a1cac94fbc3087", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6aef95e3-05b1-4077-82ff-cd503f2f506b", "node_type": "1", "metadata": {}, "hash": "8ad6822a669e82eb0f10f93ad837d6a93bea57ca8acb1ca691c749b90f3196f7", "class_name": "RelatedNodeInfo"}}, "text": "Early Activation Functions: Perceptrons \nFirst artificial neurons (1943-70s) used a simple binary \nactivation function based on which side of the hyperplane \nthe input is: \nThis is called the decision boundary \nSign function \nHeaviside (unit) step function \nThese functions are not differentiable, \ncontinuous, or smooth", "start_char_idx": 0, "end_char_idx": 320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6aef95e3-05b1-4077-82ff-cd503f2f506b": {"__data__": {"id_": "6aef95e3-05b1-4077-82ff-cd503f2f506b", "embedding": null, "metadata": {"page_label": "16", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52f3d6ff-c4be-42b8-beb8-1f058b5989cc", "node_type": "4", "metadata": {"page_label": "16", "file_name": "ANN.pdf"}, "hash": "b84d54d1155f1959ab3597bf806a9c2b849ad2c215fdbb7fed777903c2b4f23a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b22b19c7-150a-461b-9594-35ca8bd26736", "node_type": "1", "metadata": {"page_label": "15", "file_name": "ANN.pdf"}, "hash": "d9662f23360779a12fc8658029b9af8eafc77abdfc90c5a7e7f3221bc368e187", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cab73e6-2cc0-4317-9a9f-09e5077a1230", "node_type": "1", "metadata": {}, "hash": "a519ed98730ca5991f995659d03f2f1dea0a39a0cc4f97eae3245484fdc1cd38", "class_name": "RelatedNodeInfo"}}, "text": "Sigmoid Activation Function \nSigmoid activation functions were the most common before 2012: \n\u25cf Easily differentiable, smooth, continuous \n\u25cf Range between [-1, 1] or [0, 1] \nThere are many sigmoid functions, the most common are: \nHyperbolic tangent \nLogistic  function", "start_char_idx": 0, "end_char_idx": 267, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1cab73e6-2cc0-4317-9a9f-09e5077a1230": {"__data__": {"id_": "1cab73e6-2cc0-4317-9a9f-09e5077a1230", "embedding": null, "metadata": {"page_label": "17", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f309fbed-a76b-4338-89ec-c3b58260fa85", "node_type": "4", "metadata": {"page_label": "17", "file_name": "ANN.pdf"}, "hash": "41c1002ede9f1a4aa7dffa9b3d5b935195c37fa105bb271f3fa97369e32996ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6aef95e3-05b1-4077-82ff-cd503f2f506b", "node_type": "1", "metadata": {"page_label": "16", "file_name": "ANN.pdf"}, "hash": "2cf506e135903334f0dcc1eb8211a2b2a2440bb9d5c8a21fc42fe5f39c686f87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "485987b1-19e4-4437-9230-91b21e0c76a9", "node_type": "1", "metadata": {}, "hash": "9cf1609831cf6de61858f803e39ec8e54821b336ffd4630605f3ea1ec420cd3c", "class_name": "RelatedNodeInfo"}}, "text": "Sigmoid Activation Function \nSigmoid activation functions were the most common before 2012: \n\u25cf Easily differentiable, smooth, continuous \n\u25cf Range between [-1, 1] or [0, 1] \nThere are many sigmoid functions, the most common are: \nHyperbolic tangent \nLogistic  function \n Saturated neurons \u201ckill\u201d the gradients \nGradients become vanishingly small \nvery quickly away from x=0", "start_char_idx": 0, "end_char_idx": 372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "485987b1-19e4-4437-9230-91b21e0c76a9": {"__data__": {"id_": "485987b1-19e4-4437-9230-91b21e0c76a9", "embedding": null, "metadata": {"page_label": "18", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faccc440-6628-4072-afa3-a0ce1d53e73b", "node_type": "4", "metadata": {"page_label": "18", "file_name": "ANN.pdf"}, "hash": "e4ec7bf5c25cf50ce58abdba71d3bd49e6cfc587ec0b94d784948701e2d11545", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1cab73e6-2cc0-4317-9a9f-09e5077a1230", "node_type": "1", "metadata": {"page_label": "17", "file_name": "ANN.pdf"}, "hash": "a5316301247b27c4ff4817af386eacfb3da1a2d9322f4eccce573a76e874103c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b6259a8-5c31-4d69-98b1-46957ef52c5b", "node_type": "1", "metadata": {}, "hash": "53f5b8074860a25ed57a915c3a74c9afa4f5fdd1a47349ec1d1f6fd03a211df1", "class_name": "RelatedNodeInfo"}}, "text": "ReLU Activation Function \nModern deep learning typically uses the Rectified Linear \nUnit (ReLU) based activation functions: \nReLU", "start_char_idx": 0, "end_char_idx": 129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b6259a8-5c31-4d69-98b1-46957ef52c5b": {"__data__": {"id_": "5b6259a8-5c31-4d69-98b1-46957ef52c5b", "embedding": null, "metadata": {"page_label": "19", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ad90067-a011-4e97-b645-e099824402f6", "node_type": "4", "metadata": {"page_label": "19", "file_name": "ANN.pdf"}, "hash": "68930f7526b89bc2fd3b5a649cb2956d39de206438c405a841c3a6dcbb24e7e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "485987b1-19e4-4437-9230-91b21e0c76a9", "node_type": "1", "metadata": {"page_label": "18", "file_name": "ANN.pdf"}, "hash": "1c540432ec6bb43d872c8ca7d5c8d8db08aad8684e286f577daebe6192c1bb2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6204fe7d-cad2-4a27-b61d-94a6baf41443", "node_type": "1", "metadata": {}, "hash": "4683dc0247e90b4e9e220d2d3347543cecf76d66b74a302eab892a798ab5fabc", "class_name": "RelatedNodeInfo"}}, "text": "ReLU Activation Function \nModern deep learning typically uses the Rectified Linear \nUnit (ReLU) based activation functions: \nVery easy derivatives 0 or 1, use 0 at x=0 \nReLU \nLeaky ReLU \nParametric ReLU", "start_char_idx": 0, "end_char_idx": 202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6204fe7d-cad2-4a27-b61d-94a6baf41443": {"__data__": {"id_": "6204fe7d-cad2-4a27-b61d-94a6baf41443", "embedding": null, "metadata": {"page_label": "20", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a29bb7c-4052-4aeb-a145-4c5fbfbb61d7", "node_type": "4", "metadata": {"page_label": "20", "file_name": "ANN.pdf"}, "hash": "4f90bf3a2f4f45b5f6e78f9eb5f0e51343cd4a0e94a4d77f4aa21ffa55dd8dc8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b6259a8-5c31-4d69-98b1-46957ef52c5b", "node_type": "1", "metadata": {"page_label": "19", "file_name": "ANN.pdf"}, "hash": "5281047ec2063dd5f53b868034af3b1f4f75d1706ec76bbb195876e01802e729", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "330b3064-327f-43c9-ad53-f8b4aecee689", "node_type": "1", "metadata": {}, "hash": "d6ad6484fa9eea8c6ce7f99a5e1436c5ea2b8d4ded70b6dbbe439a5c4a48bc84", "class_name": "RelatedNodeInfo"}}, "text": "Continuous Approximations of ReLU \nWe can approximate ReLU activation by continuous functions: \nWork on par or better than ReLU functions SiLU (Swish) \nSoftPlus", "start_char_idx": 0, "end_char_idx": 160, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "330b3064-327f-43c9-ad53-f8b4aecee689": {"__data__": {"id_": "330b3064-327f-43c9-ad53-f8b4aecee689", "embedding": null, "metadata": {"page_label": "21", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "de9a80eb-2c15-4aeb-a569-c917b2a1e662", "node_type": "4", "metadata": {"page_label": "21", "file_name": "ANN.pdf"}, "hash": "383ca4a33a7e55ee2c99df7b6e53240f2f8baf7615801d09208452f7aa2ab834", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6204fe7d-cad2-4a27-b61d-94a6baf41443", "node_type": "1", "metadata": {"page_label": "20", "file_name": "ANN.pdf"}, "hash": "c35006cf4cc5be0c5e0cbf9f030597b689c41884a58a954206720549cd339988", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7091f64d-4e4e-4ae7-96fe-8e4f424f0c4d", "node_type": "1", "metadata": {}, "hash": "cda885b9a9cbd679b516559bb81203d1eb231e4f644cc2a780b29c7b22ed9f25", "class_name": "RelatedNodeInfo"}}, "text": "Training Neural Networks", "start_char_idx": 0, "end_char_idx": 24, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7091f64d-4e4e-4ae7-96fe-8e4f424f0c4d": {"__data__": {"id_": "7091f64d-4e4e-4ae7-96fe-8e4f424f0c4d", "embedding": null, "metadata": {"page_label": "22", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f8e70d21-6bdd-44e9-b148-a85953d7f32e", "node_type": "4", "metadata": {"page_label": "22", "file_name": "ANN.pdf"}, "hash": "7fbca577a853e335f17c6a7c9918da87731178223fb2fe11ffb00a692ccab498", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "330b3064-327f-43c9-ad53-f8b4aecee689", "node_type": "1", "metadata": {"page_label": "21", "file_name": "ANN.pdf"}, "hash": "0196a4d8799ffbc27d208ea7b11dc87ac1711f5aa17f1a5a4174ff628f058bf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "762c7ccd-6294-4f7f-988d-823b6f5712c0", "node_type": "1", "metadata": {}, "hash": "e447b47c1efdc4efd80ba036de9c453c5a2a28ccd9dbef9b1f8eb38f76936c8f", "class_name": "RelatedNodeInfo"}}, "text": "Training a Neuron \nHow do we learn  the weights  (and bias) of a neural network? \nWe can use our prediction error to decide how to change weights.", "start_char_idx": 0, "end_char_idx": 146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "762c7ccd-6294-4f7f-988d-823b6f5712c0": {"__data__": {"id_": "762c7ccd-6294-4f7f-988d-823b6f5712c0", "embedding": null, "metadata": {"page_label": "23", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3d7ff3fa-798a-4462-bb75-9cf66542fe3c", "node_type": "4", "metadata": {"page_label": "23", "file_name": "ANN.pdf"}, "hash": "725fb763776d26d88e2325766504ee3c1590c8838b634795d78720110be9f517", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7091f64d-4e4e-4ae7-96fe-8e4f424f0c4d", "node_type": "1", "metadata": {"page_label": "22", "file_name": "ANN.pdf"}, "hash": "45609ae076d772ffc0a177c37bdb1b63ae84d22d208fe84dc6374889b5a8b067", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96dec1a8-387a-4439-933a-115c7a6fb78f", "node_type": "1", "metadata": {}, "hash": "e3ee4a83d14587d23fb3330fb9cf2dacc08dda4a4514cc5defdff8c08df40140", "class_name": "RelatedNodeInfo"}}, "text": "Training a Neuron \nHow do we learn  the weights  (and bias) of a neural network? \ninput: x,   predicted output: y,   ground truth label: t,  Neuron M( w;x)", "start_char_idx": 0, "end_char_idx": 155, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96dec1a8-387a-4439-933a-115c7a6fb78f": {"__data__": {"id_": "96dec1a8-387a-4439-933a-115c7a6fb78f", "embedding": null, "metadata": {"page_label": "24", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "993b4d8b-7060-4556-8c1c-a6ac3cb793b0", "node_type": "4", "metadata": {"page_label": "24", "file_name": "ANN.pdf"}, "hash": "e698c19e8d6768e77696c47762b516023acda389a13179c867b7c0b530a5d291", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "762c7ccd-6294-4f7f-988d-823b6f5712c0", "node_type": "1", "metadata": {"page_label": "23", "file_name": "ANN.pdf"}, "hash": "725fb763776d26d88e2325766504ee3c1590c8838b634795d78720110be9f517", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09c6075c-0357-46cd-b212-df019ceb7e4e", "node_type": "1", "metadata": {}, "hash": "dd6ffa67739ba03ba471fcf85a0704db146aa4e93728197960c4c52b17da8c6b", "class_name": "RelatedNodeInfo"}}, "text": "Training a Neuron \nHow do we learn  the weights  (and bias) of a neural network? \ninput: x,   predicted output: y,   ground truth label: t,  Neuron M( w;x)\n1. Make a prediction  for some input data x, with a known correct output t \ny = M( w;x)", "start_char_idx": 0, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09c6075c-0357-46cd-b212-df019ceb7e4e": {"__data__": {"id_": "09c6075c-0357-46cd-b212-df019ceb7e4e", "embedding": null, "metadata": {"page_label": "25", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5618a944-1866-4b89-8fc3-6314eecffea8", "node_type": "4", "metadata": {"page_label": "25", "file_name": "ANN.pdf"}, "hash": "3f15f26d94ff1d39e6aa464d960df567a02631a8cdc1ea61ba635531c65f90f4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96dec1a8-387a-4439-933a-115c7a6fb78f", "node_type": "1", "metadata": {"page_label": "24", "file_name": "ANN.pdf"}, "hash": "e698c19e8d6768e77696c47762b516023acda389a13179c867b7c0b530a5d291", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1af47ba0-b5ad-4433-b4a9-f2924754c124", "node_type": "1", "metadata": {}, "hash": "94e8ddacbcc5e73432285310f69e9fff811d782b73700dd0c5f5e433de64874b", "class_name": "RelatedNodeInfo"}}, "text": "Training a Neuron \nHow do we learn  the weights  (and bias) of a neural network? \ninput: x,   predicted output: y,   ground truth label: t,  Neuron M( w;x)\n1. Make a prediction  for some input data x, with a known correct output t \ny = M( w;x)\n2. Compare the correct output with our predicted output to compute loss :\nE = Loss(y,  t)", "start_char_idx": 0, "end_char_idx": 333, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1af47ba0-b5ad-4433-b4a9-f2924754c124": {"__data__": {"id_": "1af47ba0-b5ad-4433-b4a9-f2924754c124", "embedding": null, "metadata": {"page_label": "26", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5c470945-250e-420b-ad21-d1ff50e8cfd6", "node_type": "4", "metadata": {"page_label": "26", "file_name": "ANN.pdf"}, "hash": "e82878cf852997a513830608b8115368b0ac56158608805ff5e45d0dca2bcf0f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09c6075c-0357-46cd-b212-df019ceb7e4e", "node_type": "1", "metadata": {"page_label": "25", "file_name": "ANN.pdf"}, "hash": "ecdf9efb3481e3b4f9cdc7cbe26b052cd6a616d4148b7352e81e5284833a247a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81dba120-e47a-46ce-9f55-d04a8fd0aa3b", "node_type": "1", "metadata": {}, "hash": "d98c1ea885355f3bc5021e5d4b9d7e1ced4673cd0308d3a5fd846bd2d9617352", "class_name": "RelatedNodeInfo"}}, "text": "Training a Neuron \nHow do we learn  the weights  (and bias) of a neural network? \ninput: x,   predicted output: y,   ground truth label: t,  Neuron M( w;x)\n1. Make a prediction  for some input data x, with a known correct output t \ny = M( w;x)\n2. Compare the correct output with our predicted output to compute loss :\nE = Loss(y,  t)\n3. Adjust the weights/bias  to make the prediction closer to the ground \ntruth, i.e. minimize error", "start_char_idx": 0, "end_char_idx": 433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81dba120-e47a-46ce-9f55-d04a8fd0aa3b": {"__data__": {"id_": "81dba120-e47a-46ce-9f55-d04a8fd0aa3b", "embedding": null, "metadata": {"page_label": "27", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ee136f72-10be-4a10-872f-0d59f5cfaf5d", "node_type": "4", "metadata": {"page_label": "27", "file_name": "ANN.pdf"}, "hash": "dc6a92154ad0b04df677c8acc53305b4d2e8dda3110d11498f561e32d561f5bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1af47ba0-b5ad-4433-b4a9-f2924754c124", "node_type": "1", "metadata": {"page_label": "26", "file_name": "ANN.pdf"}, "hash": "6ef2c500d7fe43e0b2748a4e1e9524233afcc94775a8a172d6f017b20b343e05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c14b1d0-a4e2-462b-970f-6e3abe2b1d28", "node_type": "1", "metadata": {}, "hash": "b18708bb2511b503b2a370f80fa61e12a520617b9bb255b3f9605c428015f102", "class_name": "RelatedNodeInfo"}}, "text": "Training a Neuron \nHow do we learn  the weights  (and bias) of a neural network? \ninput: x,   predicted output: y,   ground truth label: t,  Neuron M( w;x)\n1. Make a prediction  for some input data x, with a known correct output t \ny = M( w;x)\n2. Compare the correct output with our predicted output to compute loss :\nE = Loss(y,  t)\n3. Adjust the weights/bias  to make the prediction closer to the ground \ntruth, i.e. minimize error \n4. Repeat  until we have an acceptable level of error", "start_char_idx": 0, "end_char_idx": 488, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c14b1d0-a4e2-462b-970f-6e3abe2b1d28": {"__data__": {"id_": "8c14b1d0-a4e2-462b-970f-6e3abe2b1d28", "embedding": null, "metadata": {"page_label": "28", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f1fd88cb-0150-41a7-8e84-86a2c9650a49", "node_type": "4", "metadata": {"page_label": "28", "file_name": "ANN.pdf"}, "hash": "20ecda4278aa54f43fbe55e56a994dbe79a4f1c67b97deaf15307b8edbdd0fbd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81dba120-e47a-46ce-9f55-d04a8fd0aa3b", "node_type": "1", "metadata": {"page_label": "27", "file_name": "ANN.pdf"}, "hash": "690f26090f37359907121f3ed9db922c4cb7d986b99b3c2bcb31030fda486e07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93530868-b077-4b5a-bc8e-e0130039a5a3", "node_type": "1", "metadata": {}, "hash": "c24ca755b2fcb0d6079dc1095e39667e9a09c2e9e8112c8b4ff6f21e3f6f7999", "class_name": "RelatedNodeInfo"}}, "text": "Training a Neuron \nHow do we learn  the weights  (and bias) of a neural network? \nForward pass \nBackward pass Used for both training \nand inference \nUsed only for training input: x,   predicted output: y,   ground truth label: t,  Neuron M( w;x)\n1. Make a prediction  for some input data x, with a known correct output t \ny = M( w;x)\n2. Compare the correct output with our predicted output to compute loss :\nE = Loss(y,  t)\n3. Adjust the weights/bias  to make the prediction closer to the ground \ntruth, i.e. minimize error \n4. Repeat  until we have an acceptable level of error", "start_char_idx": 0, "end_char_idx": 578, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93530868-b077-4b5a-bc8e-e0130039a5a3": {"__data__": {"id_": "93530868-b077-4b5a-bc8e-e0130039a5a3", "embedding": null, "metadata": {"page_label": "29", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "81ede3f4-f732-447c-ac26-75582cf97176", "node_type": "4", "metadata": {"page_label": "29", "file_name": "ANN.pdf"}, "hash": "fde89541729a91ce506459868bad1112c8a1f90f75110b11b363c60e58a47a78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c14b1d0-a4e2-462b-970f-6e3abe2b1d28", "node_type": "1", "metadata": {"page_label": "28", "file_name": "ANN.pdf"}, "hash": "e2bbc938367a4fdb331d5b02e037b1f9c9d582337c85a133fafc7bee973e6e6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61edf2bd-c984-49bd-94a3-8607bc4dd74a", "node_type": "1", "metadata": {}, "hash": "6ff7f14a8259ba414971aa8adeda9d3d6ced6257dcd507bdf3d0a2796de6caae", "class_name": "RelatedNodeInfo"}}, "text": "Loss Function", "start_char_idx": 0, "end_char_idx": 13, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61edf2bd-c984-49bd-94a3-8607bc4dd74a": {"__data__": {"id_": "61edf2bd-c984-49bd-94a3-8607bc4dd74a", "embedding": null, "metadata": {"page_label": "30", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1b7cd7e-41b6-42ca-8c60-7d16dc18e50a", "node_type": "4", "metadata": {"page_label": "30", "file_name": "ANN.pdf"}, "hash": "645c3345ac9042930875a5ec1c9e763a753c2b7f645ab1583d02aae5b995f0d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93530868-b077-4b5a-bc8e-e0130039a5a3", "node_type": "1", "metadata": {"page_label": "29", "file_name": "ANN.pdf"}, "hash": "cc41d558ea104213e526058586530bd75dd75cf6ff76e0f38e2615e1a62f0598", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e79be5b5-4775-4cd9-86dc-d461516205cc", "node_type": "1", "metadata": {}, "hash": "33fe9c2a4fbd7f670e142df5b5db03d945187a083fb3dda599b219c324abca42", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nA loss function  computes how bad predictions are compared to the ground truth labels. \n\u25cf Large loss:  the network\u2019s prediction differs from the ground truth \n\u25cf Small loss:  the network\u2019s prediction matches the ground truth \nWe want to calculate the error over all training samples  (average error)", "start_char_idx": 0, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e79be5b5-4775-4cd9-86dc-d461516205cc": {"__data__": {"id_": "e79be5b5-4775-4cd9-86dc-d461516205cc", "embedding": null, "metadata": {"page_label": "31", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fedb07f4-ce5b-414b-bf85-d752a8e771f4", "node_type": "4", "metadata": {"page_label": "31", "file_name": "ANN.pdf"}, "hash": "1c5b3a5af62133ffc6e3e260c0e4d2aeb7cc60fff367b916d4f92875ffe1a9ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61edf2bd-c984-49bd-94a3-8607bc4dd74a", "node_type": "1", "metadata": {"page_label": "30", "file_name": "ANN.pdf"}, "hash": "185a1a05bffa72648e2842d113ad4f8b0fb42ad98803b67a6f449ad08f5bc7e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1e0002e-3613-43e1-9a22-dda6d822cfc9", "node_type": "1", "metadata": {}, "hash": "728b09bcf529a0b270154bfcfca6cab0f0c64b0b27369ab7222de91a11f9a7cf", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nSuppose we want to train a linear neuron to differentiate images into three classes: \nPredictions \nhttps://cs231n.github.io/linear-classify/", "start_char_idx": 0, "end_char_idx": 155, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1e0002e-3613-43e1-9a22-dda6d822cfc9": {"__data__": {"id_": "d1e0002e-3613-43e1-9a22-dda6d822cfc9", "embedding": null, "metadata": {"page_label": "32", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c2811ee0-001b-4706-8168-e6c30302d471", "node_type": "4", "metadata": {"page_label": "32", "file_name": "ANN.pdf"}, "hash": "8d62d1dd09c11878861be48d79ae81be5ea2fd5848d1c2f61248da2ce243be8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e79be5b5-4775-4cd9-86dc-d461516205cc", "node_type": "1", "metadata": {"page_label": "31", "file_name": "ANN.pdf"}, "hash": "4b4068a589fcdf8c595634fc2591a18003b82d84c7770b5e9064467c97edc40a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe238974-fe68-40d9-820c-e47d579e781c", "node_type": "1", "metadata": {}, "hash": "e53814bd7596a981d1c89e59445605226be6732dd9648685898b103149be9365", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nSuppose we want to train a linear neuron to differentiate images into three classes: \nPredicted label True label \nhttps://cs231n.github.io/linear-classify/", "start_char_idx": 0, "end_char_idx": 170, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe238974-fe68-40d9-820c-e47d579e781c": {"__data__": {"id_": "fe238974-fe68-40d9-820c-e47d579e781c", "embedding": null, "metadata": {"page_label": "33", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e7bdf128-97f4-4aae-8a94-138d4bdd61bb", "node_type": "4", "metadata": {"page_label": "33", "file_name": "ANN.pdf"}, "hash": "f75d381c623d75635e15191c6f65b9dcd6f5e3b1ba6b615add0cdfd2161c3be4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1e0002e-3613-43e1-9a22-dda6d822cfc9", "node_type": "1", "metadata": {"page_label": "32", "file_name": "ANN.pdf"}, "hash": "5c4839cb0d94d6b45fa7474b5337d8551f8625856b83a71ff15d6097c4010b72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "678c5d77-09ea-4895-bf43-ecc98365b53d", "node_type": "1", "metadata": {}, "hash": "659b01b5787a4620933bdc05b84bed849aa6775dcadf20f5e8df77d676464f21", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nSuppose we want to train a linear neuron to differentiate images into three classes: \nPredicted label True label \nhttps://cs231n.github.io/linear-classify/ We cannot compare 437.9 to \u201ccat\u201d \u2192 \nWe need Canonical representation", "start_char_idx": 0, "end_char_idx": 239, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "678c5d77-09ea-4895-bf43-ecc98365b53d": {"__data__": {"id_": "678c5d77-09ea-4895-bf43-ecc98365b53d", "embedding": null, "metadata": {"page_label": "34", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bc8b03da-2120-40e3-90c8-a8864c9768f1", "node_type": "4", "metadata": {"page_label": "34", "file_name": "ANN.pdf"}, "hash": "2b5713d31af36fad25a17787fd996f4e9118fcc3204a49de076fb7d0373dee9f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe238974-fe68-40d9-820c-e47d579e781c", "node_type": "1", "metadata": {"page_label": "33", "file_name": "ANN.pdf"}, "hash": "2afc5039ea65b6536dd0a8c60e3a004fb501a7b7cd5c684bcd0889f960e7fb45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3765dcc-ecda-4a86-98c1-7f4ab02a627c", "node_type": "1", "metadata": {}, "hash": "89eae6685cf748128d4a37a5dbcc4dd7aa11d2446fcd6bae3be9b118dcd06acd", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nSoftmax function  \u2192 normalizes the logits  into a categorical probability distribution over all \npossible classes. \nLinear Layer \n-96.8 \n437.9 \n61.95 Logits p(Class) \n0.01 \n0.97 \n0.02", "start_char_idx": 0, "end_char_idx": 198, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3765dcc-ecda-4a86-98c1-7f4ab02a627c": {"__data__": {"id_": "d3765dcc-ecda-4a86-98c1-7f4ab02a627c", "embedding": null, "metadata": {"page_label": "35", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2485160d-36dc-4c4e-b708-e53d71c1bd98", "node_type": "4", "metadata": {"page_label": "35", "file_name": "ANN.pdf"}, "hash": "29d56cc45c684982df3bbad3fd649b5d5030b42795c78f4a07461878a2615b80", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "678c5d77-09ea-4895-bf43-ecc98365b53d", "node_type": "1", "metadata": {"page_label": "34", "file_name": "ANN.pdf"}, "hash": "393b4cbc334e6de603945da07a142fdca404960d0604b523df526be2157d4d44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2653753-e23f-4fcb-938a-2fe40369461e", "node_type": "1", "metadata": {}, "hash": "35e1a58d6e55f4472fc7e44096d5955f60aead175f7438d91a6c9f042de9a45e", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nSoftmax function  \u2192 normalizes the logits  into a categorical probability distribution over all \npossible classes. \nLinear Layer \n-96.8 \n437.9 \n61.95 Logits p(Class) \n0.01 \n0.97 \n0.02 \nOne-hot encoding  \u2192 Maps categories to vector representation. \nCat\nDog \nSheep One-hot [1 0 0] \n[0 1 0] \n[0 0 1]", "start_char_idx": 0, "end_char_idx": 311, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2653753-e23f-4fcb-938a-2fe40369461e": {"__data__": {"id_": "e2653753-e23f-4fcb-938a-2fe40369461e", "embedding": null, "metadata": {"page_label": "36", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "526c7439-2265-4009-bc9a-042915192a09", "node_type": "4", "metadata": {"page_label": "36", "file_name": "ANN.pdf"}, "hash": "c8e8e5ba610a5ac4c90d8eab2082a6023baa9e650482472b737f012a7bb52f07", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3765dcc-ecda-4a86-98c1-7f4ab02a627c", "node_type": "1", "metadata": {"page_label": "35", "file_name": "ANN.pdf"}, "hash": "6efb191977f4910e94c0846af8e368343e909d5c2491095e45163388d7e742c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e42f3415-4a69-464e-aa68-9c58d288ef40", "node_type": "1", "metadata": {}, "hash": "9e1131ee2740ec36ab7a6c1e187a279aedfb15b9ce75ab2dd4bd1aab6d51c221", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nMean Squared Error (MSE)  \u2192 Mostly used for regression problems. \nPredicted \np(Class) \n0.01 \n0.97 \n0.02 1.0\n0.0\n0.0Ground \ntruth \nMSE =  (0.01 - 1.0)2 = 0.98 Number of \ntraining samples Prediction True label", "start_char_idx": 0, "end_char_idx": 222, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e42f3415-4a69-464e-aa68-9c58d288ef40": {"__data__": {"id_": "e42f3415-4a69-464e-aa68-9c58d288ef40", "embedding": null, "metadata": {"page_label": "37", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1ef78171-3202-4408-a42a-5d4130e9c6c2", "node_type": "4", "metadata": {"page_label": "37", "file_name": "ANN.pdf"}, "hash": "96de607c2cb0244d16fd2227c0de0cf7a64216dd64dca566d9f65dd10d26c571", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2653753-e23f-4fcb-938a-2fe40369461e", "node_type": "1", "metadata": {"page_label": "36", "file_name": "ANN.pdf"}, "hash": "2f402537661d0e78c27de057344c859a5ffc2a33d4d35b7fa4f4d2d463a1ec2a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33535932-03c0-4c41-980e-1aaab4800bd5", "node_type": "1", "metadata": {}, "hash": "30db9cb447453e2f2edc2761cba47c8bac2fb94dec6482da65140a4095ccadd1", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nCross Entropy (CE)  \u2192 Mostly used for classification problems. \nPredicted \np(Class) \n0.01 \n0.97 \n0.02 1.0\n0.0\n0.0Ground \ntruth \nCE =  -[1.0 x log2(0.01) + \n               0.0 x log2(0.97) + \n               0.0 x log2(0.02)] = 6.64 # training samples Prediction \n#classes True label", "start_char_idx": 0, "end_char_idx": 296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33535932-03c0-4c41-980e-1aaab4800bd5": {"__data__": {"id_": "33535932-03c0-4c41-980e-1aaab4800bd5", "embedding": null, "metadata": {"page_label": "38", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "12bb8d7c-95fb-4a19-8f4a-f474f4ee66c8", "node_type": "4", "metadata": {"page_label": "38", "file_name": "ANN.pdf"}, "hash": "d8fa76c93e8d254cec00990db4439488ad881f1d42db223d345b7ed23328a964", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e42f3415-4a69-464e-aa68-9c58d288ef40", "node_type": "1", "metadata": {"page_label": "37", "file_name": "ANN.pdf"}, "hash": "b7877c117fd49533853449cf44559329305ff8fa4bbc74e4e2ba1c6c3043199d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "040a5248-ce0f-4c08-a48c-eaa30427741f", "node_type": "1", "metadata": {}, "hash": "87cac2603a21628113a57dedba0ea95b46092078bc3ead87ede47639164a5bd0", "class_name": "RelatedNodeInfo"}}, "text": "Loss function \nCross Entropy (CE) \nBinary Cross Entropy (BCE)", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "040a5248-ce0f-4c08-a48c-eaa30427741f": {"__data__": {"id_": "040a5248-ce0f-4c08-a48c-eaa30427741f", "embedding": null, "metadata": {"page_label": "39", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f185fc72-7abc-444f-adb7-65b72644f52a", "node_type": "4", "metadata": {"page_label": "39", "file_name": "ANN.pdf"}, "hash": "8d451b71513e16a2ec57d9dc4ffee441cf9011b4aabc6c4275861197f62d6b9a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33535932-03c0-4c41-980e-1aaab4800bd5", "node_type": "1", "metadata": {"page_label": "38", "file_name": "ANN.pdf"}, "hash": "4443de49ef15812e9ca75180112f6028985592e6019c1adf7d71c5a4793e5841", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83eaf2fd-6d4d-4921-bf46-e11a26d29987", "node_type": "1", "metadata": {}, "hash": "35573528b0291f4b08f73a2980bed93a56dc2c7e026936fbb18abe22640438e0", "class_name": "RelatedNodeInfo"}}, "text": "Forward-Pass with Error Calculations \nimport math\nx = [[1.0, 0.1,-0.2],   # data\n     [1.0,-0.1, 0.9], \n     [1.0, 1.2, 0.1], \n     [1.0, 1.1, 1.5]]  \nt = [0, 0, 0, 1]        # labels        \nw = [1, -1, 1]      # initial weights \ndef simple_ANN (x, w, t):\n    total_e, e , y = 0, [], [] \n    for n in range(len(x)):\n   v = 0\n   for d in range(len(x[0])):\n       v += x[n][d] * w[d] \n   y.append(1/1+math.e**(-v))     # sigmoid \n   e.append((y[n]-t[n])**2)       # MSE     \n     total_e = sum(e)/len(x)\n     return (y, w, total_e)", "start_char_idx": 0, "end_char_idx": 530, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83eaf2fd-6d4d-4921-bf46-e11a26d29987": {"__data__": {"id_": "83eaf2fd-6d4d-4921-bf46-e11a26d29987", "embedding": null, "metadata": {"page_label": "40", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6446ff8b-19b7-4370-9cce-e5f012654df2", "node_type": "4", "metadata": {"page_label": "40", "file_name": "ANN.pdf"}, "hash": "ac371c4af08c4e08d897048adf0f4f19e0a4048ab2bcb0801af5496713b3f630", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "040a5248-ce0f-4c08-a48c-eaa30427741f", "node_type": "1", "metadata": {"page_label": "39", "file_name": "ANN.pdf"}, "hash": "d3f1dc0d9af03019583851689df87c09a6fb16f20db21d001cc7929b910c133b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3430677b-4cd8-4e87-8ef0-e918e71e2306", "node_type": "1", "metadata": {}, "hash": "c3aa4bf797f6cd1e37730be5fd7a3b760625a02bedac7d5c7c3aaf3bda915b24", "class_name": "RelatedNodeInfo"}}, "text": "Forward-Pass with Error Calculations \nimport math\nx = [[1.0, 0.1,-0.2],   # data\n     [1.0,-0.1, 0.9], \n     [1.0, 1.2, 0.1], \n     [1.0, 1.1, 1.5]]  \nt = [0, 0, 0, 1]        # labels        \nw = [1, -1, 1]      # initial weights \ndef simple_ANN (x, w, t):\n    total_e, e , y = 0, [], [] \n    for n in range(len(x)):\n   v = 0\n   for d in range(len(x[0])):\n       v += x[n][d] * w[d] \n   y.append(1/1+math.e**(-v))     # sigmoid \n   e.append(-t[n]*math.log(y[n])-(1-t[n])*math.log(1-y[n]))  # BCE     \n     total_e = sum(e)/len(x)\n     return (y, w, total_e)", "start_char_idx": 0, "end_char_idx": 557, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3430677b-4cd8-4e87-8ef0-e918e71e2306": {"__data__": {"id_": "3430677b-4cd8-4e87-8ef0-e918e71e2306", "embedding": null, "metadata": {"page_label": "41", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "906bc828-2da8-495f-b373-b7a56ca0b297", "node_type": "4", "metadata": {"page_label": "41", "file_name": "ANN.pdf"}, "hash": "5682673bdbfb4240a2949ef3d23af8f5bc12715649c2dc8bbbca92774a9f74bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83eaf2fd-6d4d-4921-bf46-e11a26d29987", "node_type": "1", "metadata": {"page_label": "40", "file_name": "ANN.pdf"}, "hash": "dcd26eb3e60c08eedac834aa0496573b948b65fb6e9bd44c5343a054654437fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32978a76-a18f-4f61-8a70-e85cab62650a", "node_type": "1", "metadata": {}, "hash": "8800829a5799bcc60c17535e3c9c4627fa21e90b33bc0eadc089c3d6383b7f74", "class_name": "RelatedNodeInfo"}}, "text": "Intermission \n(5 to 10 min break)", "start_char_idx": 0, "end_char_idx": 33, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32978a76-a18f-4f61-8a70-e85cab62650a": {"__data__": {"id_": "32978a76-a18f-4f61-8a70-e85cab62650a", "embedding": null, "metadata": {"page_label": "42", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b964d3dd-f752-4a78-822c-ce267c586e71", "node_type": "4", "metadata": {"page_label": "42", "file_name": "ANN.pdf"}, "hash": "83307d117d2526750cbb08bcca579449d6d84076858b6e991b78a62dfff00ac1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3430677b-4cd8-4e87-8ef0-e918e71e2306", "node_type": "1", "metadata": {"page_label": "41", "file_name": "ANN.pdf"}, "hash": "2d9630f59c7caae5c9c314fb8305c827db7298a31ed20f770cc5c27d8752bcf0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ec82e3d-b47a-4be8-aa97-6a84b10ecf7c", "node_type": "1", "metadata": {}, "hash": "fb1b0b8cd96d2326d25471e0805fb1772f7caec888aebaa331b31f3649d36dbb", "class_name": "RelatedNodeInfo"}}, "text": "Gradient Descent", "start_char_idx": 0, "end_char_idx": 16, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ec82e3d-b47a-4be8-aa97-6a84b10ecf7c": {"__data__": {"id_": "1ec82e3d-b47a-4be8-aa97-6a84b10ecf7c", "embedding": null, "metadata": {"page_label": "43", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2336b549-333c-4dce-a5af-461a1547d7d6", "node_type": "4", "metadata": {"page_label": "43", "file_name": "ANN.pdf"}, "hash": "3100d6d1010d46ce33b867f60dedc53a4d52e025b897cb18e59fb2d34b1c878e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32978a76-a18f-4f61-8a70-e85cab62650a", "node_type": "1", "metadata": {"page_label": "42", "file_name": "ANN.pdf"}, "hash": "224c0128e6cb0e533f10347d0e9dc1116e99668b94741a5cd21831f925a5aeac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fe383a2-9ce0-4024-8c63-3acafb474132", "node_type": "1", "metadata": {}, "hash": "5033828da1e7e820c1072f8ebe27f31a6ca8e3ff65417f4cd9c92a9fe99c0373", "class_name": "RelatedNodeInfo"}}, "text": "Neural Network Layer (Vector, Matrices, and Tensors) \nA neural network layer with two neurons: \ny1=f(w1\u22c5x+b1) \ny2=f(w2\u22c5x+b2)\nCan represent NN layer easier with a weight matrix , e.g. \nwhere each neuron's weight vector is a row  of the weight \nmatrix W and the input is a column  vector x:\n11", "start_char_idx": 0, "end_char_idx": 291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0fe383a2-9ce0-4024-8c63-3acafb474132": {"__data__": {"id_": "0fe383a2-9ce0-4024-8c63-3acafb474132", "embedding": null, "metadata": {"page_label": "44", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "635f44da-7c4d-43b5-acbd-e11a712bfc50", "node_type": "4", "metadata": {"page_label": "44", "file_name": "ANN.pdf"}, "hash": "dca673d42252f06c0ff2922c18d4b43394d1bb903b43eb3bb86a7add07a23e78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ec82e3d-b47a-4be8-aa97-6a84b10ecf7c", "node_type": "1", "metadata": {"page_label": "43", "file_name": "ANN.pdf"}, "hash": "3100d6d1010d46ce33b867f60dedc53a4d52e025b897cb18e59fb2d34b1c878e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20d03db5-9268-4e28-91db-94a881743d62", "node_type": "1", "metadata": {}, "hash": "6a9b5ebc6eb64a250503c27b7c86fb2007728aec263b0eeaf989a1509b424748", "class_name": "RelatedNodeInfo"}}, "text": "Neural Network Layer (Vector, Matrices, and Tensors) \nA neural network layer with two neurons: \ny1=f(w1\u22c5x+b1) \ny2=f(w2\u22c5x+b2)\nCan represent NN layer easier with a weight matrix , e.g. \nwhere each neuron's weight vector is a row  of the weight \nmatrix W and the input is a column  vector x:\ny=f(Wx+b)\nThis is important to know about because you will spend a \nlot of time debugging the dimensions of your tensors \n(where we add other dimensions such as batch size also)! \n11", "start_char_idx": 0, "end_char_idx": 471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20d03db5-9268-4e28-91db-94a881743d62": {"__data__": {"id_": "20d03db5-9268-4e28-91db-94a881743d62", "embedding": null, "metadata": {"page_label": "45", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "810ac4e4-781a-478d-b708-765191428c46", "node_type": "4", "metadata": {"page_label": "45", "file_name": "ANN.pdf"}, "hash": "e6c2546afadf1f4949b7c9daee6c2a0e2141e88595a9c2957b4b60e93a99703f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0fe383a2-9ce0-4024-8c63-3acafb474132", "node_type": "1", "metadata": {"page_label": "44", "file_name": "ANN.pdf"}, "hash": "dca673d42252f06c0ff2922c18d4b43394d1bb903b43eb3bb86a7add07a23e78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8e482d9-1905-4563-906b-649d56a1e98a", "node_type": "1", "metadata": {}, "hash": "a4c850da9c6fc974dbfb9d1f88bbe147c9d4328fbe4de60d4d96b02256c86976", "class_name": "RelatedNodeInfo"}}, "text": "Neural Network Single Layer Training: Delta Rule \nWe want to know how to change each of our neuron's \nweights  wji to reduce this error E \nFirst we need to know how our error changes with each \nweight\u2026 \nThis is relatively simple to calculate adjacent to the \noutput layer \n11", "start_char_idx": 0, "end_char_idx": 275, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8e482d9-1905-4563-906b-649d56a1e98a": {"__data__": {"id_": "d8e482d9-1905-4563-906b-649d56a1e98a", "embedding": null, "metadata": {"page_label": "46", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8099c798-3d18-4478-9447-1649b17aa827", "node_type": "4", "metadata": {"page_label": "46", "file_name": "ANN.pdf"}, "hash": "77eff0da6b2bc0fd1730803496f9d429a0f870be4e9a0a7ca5bf48d5ebead518", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20d03db5-9268-4e28-91db-94a881743d62", "node_type": "1", "metadata": {"page_label": "45", "file_name": "ANN.pdf"}, "hash": "b2c4823ed307cca3a9c30078fef596116682851d1b9e12f9aa5d0ca29434aa4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a60e8c12-bfa0-4162-8d80-fd8e42ddd32f", "node_type": "1", "metadata": {}, "hash": "1eba073323e29de01601a1c25ba475236b9f99ac93be3d73c141ea86f7c6d9f3", "class_name": "RelatedNodeInfo"}}, "text": "Neural Network Single Layer Training \nError Surface Vector of partial derivatives for all weights is the gradient \n\u25cf Direction of the gradient is the direction in which the  \nfunction increases most quickly  \n\u25cf Magnitude of the gradient is the rate of increase \nAdjusting weights according to the slope (gradient) will \nguide us the minimum (or maximum) error \nlearning rate (step size)", "start_char_idx": 0, "end_char_idx": 386, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a60e8c12-bfa0-4162-8d80-fd8e42ddd32f": {"__data__": {"id_": "a60e8c12-bfa0-4162-8d80-fd8e42ddd32f", "embedding": null, "metadata": {"page_label": "47", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b28c5116-148d-4cb2-b1a7-20bab321cf51", "node_type": "4", "metadata": {"page_label": "47", "file_name": "ANN.pdf"}, "hash": "170243988b2c9a5c0377e99a043c3aadb21f8de99a23d8fba5080390ce32fbd1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8e482d9-1905-4563-906b-649d56a1e98a", "node_type": "1", "metadata": {"page_label": "46", "file_name": "ANN.pdf"}, "hash": "2c80f2ba1e37d2b09ef87ec467f43eed5fd8cdced62fd9f939e81a3b3c6becf8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20ac1cca-52b9-45c2-84e1-a6cd2e2efd18", "node_type": "1", "metadata": {}, "hash": "ed10e8da1a928fb8c6758155e90fbe044e6853aefc8e16d5f50c164ab41cfe88", "class_name": "RelatedNodeInfo"}}, "text": "Delta Rule for Single Weight/Training Sample \n???", "start_char_idx": 0, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20ac1cca-52b9-45c2-84e1-a6cd2e2efd18": {"__data__": {"id_": "20ac1cca-52b9-45c2-84e1-a6cd2e2efd18", "embedding": null, "metadata": {"page_label": "48", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c8415b0-c0f6-460b-817a-73e4be151854", "node_type": "4", "metadata": {"page_label": "48", "file_name": "ANN.pdf"}, "hash": "d54935fed34899c466c26a38161d950a1b35fcca73ceec8c8734b77a5f60f5bd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a60e8c12-bfa0-4162-8d80-fd8e42ddd32f", "node_type": "1", "metadata": {"page_label": "47", "file_name": "ANN.pdf"}, "hash": "170243988b2c9a5c0377e99a043c3aadb21f8de99a23d8fba5080390ce32fbd1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "372b1c3b-59be-4651-bd66-0d0aacfbed62", "node_type": "1", "metadata": {}, "hash": "ed10e8da1a928fb8c6758155e90fbe044e6853aefc8e16d5f50c164ab41cfe88", "class_name": "RelatedNodeInfo"}}, "text": "Delta Rule for Single Weight/Training Sample \nChain rule!", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "372b1c3b-59be-4651-bd66-0d0aacfbed62": {"__data__": {"id_": "372b1c3b-59be-4651-bd66-0d0aacfbed62", "embedding": null, "metadata": {"page_label": "49", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b90f47ab-0875-44fe-9c03-ee3ce58e6c24", "node_type": "4", "metadata": {"page_label": "49", "file_name": "ANN.pdf"}, "hash": "b4876397b24b4b72293c93e93eb1c240686a5733458dddb928cd248fa9c6eaaa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20ac1cca-52b9-45c2-84e1-a6cd2e2efd18", "node_type": "1", "metadata": {"page_label": "48", "file_name": "ANN.pdf"}, "hash": "c2fe6560092556ccfcd7f4f3aa74209f9f5941f1c5a510f02df1ecf72665927e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb271ed7-8063-409b-b374-ca38d9d2bc54", "node_type": "1", "metadata": {}, "hash": "ed10e8da1a928fb8c6758155e90fbe044e6853aefc8e16d5f50c164ab41cfe88", "class_name": "RelatedNodeInfo"}}, "text": "Delta Rule for Single Weight/Training Sample \nChain rule!", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb271ed7-8063-409b-b374-ca38d9d2bc54": {"__data__": {"id_": "cb271ed7-8063-409b-b374-ca38d9d2bc54", "embedding": null, "metadata": {"page_label": "50", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd509720-d362-4a03-b338-4a666df1c27d", "node_type": "4", "metadata": {"page_label": "50", "file_name": "ANN.pdf"}, "hash": "effb69b9768be2f119f61959e666b9209a3c08300f8797a38eb9017b6b7ce2a9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "372b1c3b-59be-4651-bd66-0d0aacfbed62", "node_type": "1", "metadata": {"page_label": "49", "file_name": "ANN.pdf"}, "hash": "bed16a09a0533e0e809f9dd1b892584010e639184b3904144496890e1c6c7216", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94aca33c-0bf8-4c9e-8452-c9f281c1372c", "node_type": "1", "metadata": {}, "hash": "ed10e8da1a928fb8c6758155e90fbe044e6853aefc8e16d5f50c164ab41cfe88", "class_name": "RelatedNodeInfo"}}, "text": "Delta Rule for Single Weight/Training Sample \nChain rule!", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94aca33c-0bf8-4c9e-8452-c9f281c1372c": {"__data__": {"id_": "94aca33c-0bf8-4c9e-8452-c9f281c1372c", "embedding": null, "metadata": {"page_label": "51", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "07f05a6c-71ee-4890-8482-70abed864d12", "node_type": "4", "metadata": {"page_label": "51", "file_name": "ANN.pdf"}, "hash": "3e9b7c495206b1d573ce7c92c0628214c00f236fd4cb4aaffbb1acda4a48201f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb271ed7-8063-409b-b374-ca38d9d2bc54", "node_type": "1", "metadata": {"page_label": "50", "file_name": "ANN.pdf"}, "hash": "09a00200f86c177f8e2d2b734feef4024bf245c13e8eae74783b5821a9806e18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9fcef31d-efcb-464e-b059-f05fb557e538", "node_type": "1", "metadata": {}, "hash": "ed10e8da1a928fb8c6758155e90fbe044e6853aefc8e16d5f50c164ab41cfe88", "class_name": "RelatedNodeInfo"}}, "text": "Delta Rule for Single Weight/Training Sample \nChain rule!", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9fcef31d-efcb-464e-b059-f05fb557e538": {"__data__": {"id_": "9fcef31d-efcb-464e-b059-f05fb557e538", "embedding": null, "metadata": {"page_label": "52", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c094c12f-1872-4230-9db3-663177fec3a3", "node_type": "4", "metadata": {"page_label": "52", "file_name": "ANN.pdf"}, "hash": "50e2f68ff5bf6e08ba9fa837781e93a00434b5e0350136fe37af837b5990da0c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94aca33c-0bf8-4c9e-8452-c9f281c1372c", "node_type": "1", "metadata": {"page_label": "51", "file_name": "ANN.pdf"}, "hash": "141336818d3e4b581d317bf75a20e1f936b1a25a30c20bf90865722e9f346013", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34c9bd60-35dc-45f7-9dc5-751c6cf4fc3b", "node_type": "1", "metadata": {}, "hash": "4b190640f9d20f3f65ea49f226efd8c9a8e169bc286aa6e4fbde1d420b7df8fa", "class_name": "RelatedNodeInfo"}}, "text": "Delta Rule for Single Weight/Training Sample \nChain rule!", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34c9bd60-35dc-45f7-9dc5-751c6cf4fc3b": {"__data__": {"id_": "34c9bd60-35dc-45f7-9dc5-751c6cf4fc3b", "embedding": null, "metadata": {"page_label": "53", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50d0329f-e7ad-4e8a-9212-ed0c13e70545", "node_type": "4", "metadata": {"page_label": "53", "file_name": "ANN.pdf"}, "hash": "4dc38bb99e5162b73156653c590e58d35978d135afbd59f62d14930284055fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9fcef31d-efcb-464e-b059-f05fb557e538", "node_type": "1", "metadata": {"page_label": "52", "file_name": "ANN.pdf"}, "hash": "321e9840247989b3d3ed2185b5e983aa61815ecd8e279bc6a7f7451c28ddec2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "594204f0-b409-4f3f-b09b-b04aaeef930c", "node_type": "1", "metadata": {}, "hash": "dc01f3afeee91b68718e20dd9cebf22077ab81d3b313dec5669ea0309de174cb", "class_name": "RelatedNodeInfo"}}, "text": "Forward-Pass & Backward-Pass \ndef simple_ANN (x, w, t, iter, lr ):\n    total_ e = 0\n    for i in range(iter):\n        e, y = [], [] \n        for n in range(len(x)):\n       v = 0\n       for d in range(len(x[0])):\n           v += x[n][d] * w[d] \n       y. append(1/1+math.e**(-v))     # sigmoid \n       e. append((y[n]-t[n])**2)       # MSE \n           \n  # gradient descent to update weights \n           for p in range(len(w)): \n               d = 2*x[n][p]*(y[n]-t[n])*(1-y[n])*y[n] \n               W[p] -= lr*d       \n     total_e = sum(e)/len(x)\n     return (y, w, e)", "start_char_idx": 0, "end_char_idx": 569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "594204f0-b409-4f3f-b09b-b04aaeef930c": {"__data__": {"id_": "594204f0-b409-4f3f-b09b-b04aaeef930c", "embedding": null, "metadata": {"page_label": "54", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "344920e6-8a58-4db3-a16f-9343b93a2be5", "node_type": "4", "metadata": {"page_label": "54", "file_name": "ANN.pdf"}, "hash": "10c28eeb4a59d10cf6a20b989af83a5043d2e908ae4d61619c9fd68748eb2625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34c9bd60-35dc-45f7-9dc5-751c6cf4fc3b", "node_type": "1", "metadata": {"page_label": "53", "file_name": "ANN.pdf"}, "hash": "84a642673d132f176d6eda47caac5d16d5ba2acb6c3fdd186bec15227f98abb2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21d8689e-ad02-4113-9540-a6b30a937c3f", "node_type": "1", "metadata": {}, "hash": "7b3b20879c65136d0dc786f57b7542b788eb9910560dec58a3623ba5bd8ab29c", "class_name": "RelatedNodeInfo"}}, "text": "Neural Network Architectures", "start_char_idx": 0, "end_char_idx": 28, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21d8689e-ad02-4113-9540-a6b30a937c3f": {"__data__": {"id_": "21d8689e-ad02-4113-9540-a6b30a937c3f", "embedding": null, "metadata": {"page_label": "55", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "594e3194-73dd-4992-9132-b9ebd719cd04", "node_type": "4", "metadata": {"page_label": "55", "file_name": "ANN.pdf"}, "hash": "1e04fd596c18824e5d9376d27969d6a8e91cce76be5b45a24853c45c4252528f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "594204f0-b409-4f3f-b09b-b04aaeef930c", "node_type": "1", "metadata": {"page_label": "54", "file_name": "ANN.pdf"}, "hash": "960f1cd95392d4fd9f6eddad2d8b36f46c7f1baeb1e797cf0f5b317c8b071797", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbe343c1-b0f8-445f-a6c6-f8cf6ce8a398", "node_type": "1", "metadata": {}, "hash": "d6995cebf7a3fef8cbe389c28b373493b79a669d8fde34fa0fffeea43e4ee19c", "class_name": "RelatedNodeInfo"}}, "text": "Multiple Layers are Important: XOR \nHaving a single decision boundary (a single NN layer) is \nnot enough to solve many problems \nThe most famous such problem is the XOR function, which \nneeds two decision boundaries to solve \nWe solve this by having at least one hidden neural network \nlayer  (i.e., two layers) \nIn fact in the limit of an infinitely-wide neural network \nwith at least one hidden layer, NN is a universal function \napproximator", "start_char_idx": 0, "end_char_idx": 444, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbe343c1-b0f8-445f-a6c6-f8cf6ce8a398": {"__data__": {"id_": "fbe343c1-b0f8-445f-a6c6-f8cf6ce8a398", "embedding": null, "metadata": {"page_label": "56", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45a76e81-0eaf-4c4a-8df7-0e20869336ff", "node_type": "4", "metadata": {"page_label": "56", "file_name": "ANN.pdf"}, "hash": "a66f7f116816e25461fae90d96507c8f822a8f73395c3c5fb2abb5358ee130d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21d8689e-ad02-4113-9540-a6b30a937c3f", "node_type": "1", "metadata": {"page_label": "55", "file_name": "ANN.pdf"}, "hash": "9317b8d2caa870cef34d3615a9859eb46006cc71e5fac9f9fd25e637d9568ff3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de2c13d9-5c04-4418-88d3-5a5d54965114", "node_type": "1", "metadata": {}, "hash": "33581e417835094241795b7822f5056f8cd082aa76f7fed678966faa74da110a", "class_name": "RelatedNodeInfo"}}, "text": "Backpropagation: Solving Credit Assignment Problem \nNeural networks up until the 1970s were not very useful for \ntwo main reasons: \n\u25cf Not clear how to train a NN of more than 1 layer \u2192 \nknown as the credit assignment problem \n\u25cf A neural network of only one layer cannot describe \ncomplex functions, two or more can represent any \nfunction (in theory with infinite width). \n output input \n Hidden layer \n??? \u2713", "start_char_idx": 0, "end_char_idx": 408, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de2c13d9-5c04-4418-88d3-5a5d54965114": {"__data__": {"id_": "de2c13d9-5c04-4418-88d3-5a5d54965114", "embedding": null, "metadata": {"page_label": "57", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5751c887-f7b6-4adf-82b7-52b1d8e9b490", "node_type": "4", "metadata": {"page_label": "57", "file_name": "ANN.pdf"}, "hash": "88503523cb73443431377a055f4a59ce432d66b7a15b63155b38967d0cb7524b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fbe343c1-b0f8-445f-a6c6-f8cf6ce8a398", "node_type": "1", "metadata": {"page_label": "56", "file_name": "ANN.pdf"}, "hash": "a66f7f116816e25461fae90d96507c8f822a8f73395c3c5fb2abb5358ee130d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ac1d1d1-77d5-4164-a84a-f68051f203bc", "node_type": "1", "metadata": {}, "hash": "88a5e5eb4e464d20bed0846e4c20bb7afb227f4b512f5938d0a2753c3f2239bd", "class_name": "RelatedNodeInfo"}}, "text": "Backpropagation: Solving Credit Assignment Problem \nNeural networks up until the 1970s were not very useful for \ntwo main reasons: \n\u25cf Not clear how to train a NN of more than 1 layer \u2192 \nknown as the credit assignment problem \n\u25cf A neural network of only one layer cannot describe \ncomplex functions, two or more can represent any \nfunction (in theory with infinite width). \nThe credit assignment problem was solved by \nbackpropagation , a method that describes how to distribute \nerrors to neurons not adjacent to the output layer \nSolution:  Dynamic programing \n output input \n Hidden layer \n??? \u2713", "start_char_idx": 0, "end_char_idx": 597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ac1d1d1-77d5-4164-a84a-f68051f203bc": {"__data__": {"id_": "2ac1d1d1-77d5-4164-a84a-f68051f203bc", "embedding": null, "metadata": {"page_label": "58", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d7405eb-105b-4067-9c86-d5ec0fd63c7a", "node_type": "4", "metadata": {"page_label": "58", "file_name": "ANN.pdf"}, "hash": "2f1cd03067e93c1f27f751747121a0f7f473db7110ab68000a4b17931e4cf657", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de2c13d9-5c04-4418-88d3-5a5d54965114", "node_type": "1", "metadata": {"page_label": "57", "file_name": "ANN.pdf"}, "hash": "88503523cb73443431377a055f4a59ce432d66b7a15b63155b38967d0cb7524b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05b4cf75-2217-48be-b451-4ac3ffded763", "node_type": "1", "metadata": {}, "hash": "70812308c32c5aaa058decad7d3bcbd7f1623e41f1f4a641d8cc08ab9bd2e9c0", "class_name": "RelatedNodeInfo"}}, "text": "Multiple Layers with Non-Linearity \nLinear Non-Linear \nX", "start_char_idx": 0, "end_char_idx": 56, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05b4cf75-2217-48be-b451-4ac3ffded763": {"__data__": {"id_": "05b4cf75-2217-48be-b451-4ac3ffded763", "embedding": null, "metadata": {"page_label": "59", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d633ffc0-145b-480d-9051-e14b5e6e3c2c", "node_type": "4", "metadata": {"page_label": "59", "file_name": "ANN.pdf"}, "hash": "f494784f7e4de072a9b75868483edcdd4cfbbecd23fbe8d60332a2bb6a827ae2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ac1d1d1-77d5-4164-a84a-f68051f203bc", "node_type": "1", "metadata": {"page_label": "58", "file_name": "ANN.pdf"}, "hash": "86149ea747a1e13a738f51bed3d4685b62dd93becc548ffd43a44a4c29719dcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bff13d08-2689-4fb5-b596-e9039b4df38d", "node_type": "1", "metadata": {}, "hash": "57dcef6d184ececa82b192da2ca13d2ff800255ae6e7ef4f5a8c37928eadfcf0", "class_name": "RelatedNodeInfo"}}, "text": "Neural Networks can be viewed as a \nway of learning features  directly and \nend-to-end from raw input data \nYou can use the activations  of the \nlayer before the last layer as \nhigh-level features representing the \ninput data \nThe goal being that the final layer is \npresented with a linear separation \nInput Output Multiple Layers with Non-Linearity \nFeature", "start_char_idx": 0, "end_char_idx": 359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bff13d08-2689-4fb5-b596-e9039b4df38d": {"__data__": {"id_": "bff13d08-2689-4fb5-b596-e9039b4df38d", "embedding": null, "metadata": {"page_label": "60", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "630f92dc-b28f-4bf4-bbc1-de92a604305a", "node_type": "4", "metadata": {"page_label": "60", "file_name": "ANN.pdf"}, "hash": "92339125aa0b568b94af4da622070e4bd18ef6bc12f3f3f186d64ab524c7b140", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05b4cf75-2217-48be-b451-4ac3ffded763", "node_type": "1", "metadata": {"page_label": "59", "file_name": "ANN.pdf"}, "hash": "029d38e56c31737d793732f94373e29bae6454b0425225200e99345957c4e3e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c5c27e5-9e75-48e0-be74-48f003f326a8", "node_type": "1", "metadata": {}, "hash": "b1bdc31592372f591b32adaf20677f13a14f4bcb424e3f56d8484f3953a5b1ae", "class_name": "RelatedNodeInfo"}}, "text": "Feed-Forward Network : Information only flows forward from one layer to a later layer , \nfrom the input to the output. \nFully-Connected Network : Neurons between adjacent layers are fully connected. \nNumber of Layers: Number of hidden layers + output layer \nNeural Network Architecture \n2-layer neural network 3-layer neural network", "start_char_idx": 0, "end_char_idx": 332, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c5c27e5-9e75-48e0-be74-48f003f326a8": {"__data__": {"id_": "1c5c27e5-9e75-48e0-be74-48f003f326a8", "embedding": null, "metadata": {"page_label": "61", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c242fcff-2699-4f7f-ac50-22fcd43951ad", "node_type": "4", "metadata": {"page_label": "61", "file_name": "ANN.pdf"}, "hash": "be49af8436faf00494f8dbc7ba97d97370f7ecca1401a6ad04929e8a5c559b31", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bff13d08-2689-4fb5-b596-e9039b4df38d", "node_type": "1", "metadata": {"page_label": "60", "file_name": "ANN.pdf"}, "hash": "c4b20f4ef33537348bdd99b4052bbdc8a39ff9d0e5cfa11ac2800fe3ecfdc514", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8af4f38-7fdd-4078-ad4e-153b1789f40e", "node_type": "1", "metadata": {}, "hash": "9a5056a9f1d8809ba29c0d3b3da35335a9d9b3f47320c150a10b1c1e7d26c888", "class_name": "RelatedNodeInfo"}}, "text": "An architecture of a neural network describes the neurons and their connectivity. \nArchitecture selection will greatly affect model performance. \nIn future weeks we will introduce more neural network architecture. \nNeural Network Architecture", "start_char_idx": 0, "end_char_idx": 242, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8af4f38-7fdd-4078-ad4e-153b1789f40e": {"__data__": {"id_": "e8af4f38-7fdd-4078-ad4e-153b1789f40e", "embedding": null, "metadata": {"page_label": "62", "file_name": "ANN.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57a84c72-4095-45df-935e-d30a61a704e7", "node_type": "4", "metadata": {"page_label": "62", "file_name": "ANN.pdf"}, "hash": "834a4388109620f35f997c1bc0c3d41f637b9b86ccb9bf393c2f19614b00fc1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c5c27e5-9e75-48e0-be74-48f003f326a8", "node_type": "1", "metadata": {"page_label": "61", "file_name": "ANN.pdf"}, "hash": "2a11c2c008219143ef133366d7517948826a3a7413d56b9c1ccf12592539c7a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "487dd13a-075b-4673-a1f2-45b7af8bcecd", "node_type": "1", "metadata": {}, "hash": "2e817aeac8380aea3d4097e62ee2de3fd20f0f908bd5101a5dac8f8562977bf1", "class_name": "RelatedNodeInfo"}}, "text": "Questions?", "start_char_idx": 0, "end_char_idx": 10, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "487dd13a-075b-4673-a1f2-45b7af8bcecd": {"__data__": {"id_": "487dd13a-075b-4673-a1f2-45b7af8bcecd", "embedding": null, "metadata": {"page_label": "1", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cc768538-b7db-493c-a5e8-908d4d93adf4", "node_type": "4", "metadata": {"page_label": "1", "file_name": "17a-+Bridges.pdf"}, "hash": "087e08b6264fc2ea9e428a6fb50c7c3bef9dfcb57ab33f6b4479f769dacdf2f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8af4f38-7fdd-4078-ad4e-153b1789f40e", "node_type": "1", "metadata": {"page_label": "62", "file_name": "ANN.pdf"}, "hash": "ae5f4201593b4186c7618271cc3d22941c0f266b7c550f01784501a65cb5b4c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f0c37aa-0084-48cf-801b-afacfbc392f7", "node_type": "1", "metadata": {}, "hash": "d7502d006a76317595dfe9537ca47b574e9b8a40839839bee8600a31eb87d2e2", "class_name": "RelatedNodeInfo"}}, "text": "ECE 361H1 F: Computer Networks I  J.J. Garcia-Luna-Aceves Electrical & Computer Engineering Department  University of Toronto", "start_char_idx": 0, "end_char_idx": 125, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f0c37aa-0084-48cf-801b-afacfbc392f7": {"__data__": {"id_": "5f0c37aa-0084-48cf-801b-afacfbc392f7", "embedding": null, "metadata": {"page_label": "2", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbcae74f-a7ff-4d6c-8c63-4459faec75e4", "node_type": "4", "metadata": {"page_label": "2", "file_name": "17a-+Bridges.pdf"}, "hash": "5ed693e33878391a45f01a1010d8f90b06b7a6a53814ceb53b16ad20b645f54b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "487dd13a-075b-4673-a1f2-45b7af8bcecd", "node_type": "1", "metadata": {"page_label": "1", "file_name": "17a-+Bridges.pdf"}, "hash": "087e08b6264fc2ea9e428a6fb50c7c3bef9dfcb57ab33f6b4479f769dacdf2f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "808ba32d-4e16-4cd7-ad78-83fb4c35e8db", "node_type": "1", "metadata": {}, "hash": "a1a640ddb1ed0ac274cd8f8a61aac22f482c34f8016d9952af57ef8ffac17017", "class_name": "RelatedNodeInfo"}}, "text": "TRANSPARENT BRIDGES\n\u201cForward letters\u201d\u201cRelay message\u201dTextbook 1, Sections 3.2.1 to 3.2.3", "start_char_idx": 0, "end_char_idx": 87, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "808ba32d-4e16-4cd7-ad78-83fb4c35e8db": {"__data__": {"id_": "808ba32d-4e16-4cd7-ad78-83fb4c35e8db", "embedding": null, "metadata": {"page_label": "3", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "837c2796-ac36-4382-9181-318604ae0185", "node_type": "4", "metadata": {"page_label": "3", "file_name": "17a-+Bridges.pdf"}, "hash": "d7c8cbfaa4433d97d9bfab0566fc876952660a09f3874b52f150574e93eb95f7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f0c37aa-0084-48cf-801b-afacfbc392f7", "node_type": "1", "metadata": {"page_label": "2", "file_name": "17a-+Bridges.pdf"}, "hash": "7664c31d048f6d434d03d4f4e093e0cb8a761bd079f8da323dd82f3b9bb8eb7a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65877f36-ac40-4dc4-acd3-9f4c836fddaf", "node_type": "1", "metadata": {}, "hash": "4eac708b1a267b13c34f694f1fbb211cca571a852037bb9e67387c601902a02a", "class_name": "RelatedNodeInfo"}}, "text": "Internetworking at the Link Layer\u2751Bridges are used to interconnect LANs at the link layer. \u2751Frame forwarding from one LAN to another is based on the destination\u2019s link-level address (MAC address) without making any changes to the frame. \u2751A MAC address is a name, and for a bridge the address of the destination is the adjacent LAN over which the frames to the destination should be forwarded. \u2751Plug-and-play, self-learning \u2751Bridges need not  be configured.", "start_char_idx": 0, "end_char_idx": 456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65877f36-ac40-4dc4-acd3-9f4c836fddaf": {"__data__": {"id_": "65877f36-ac40-4dc4-acd3-9f4c836fddaf", "embedding": null, "metadata": {"page_label": "4", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b04ce058-9be5-499f-be8d-19035dc76ead", "node_type": "4", "metadata": {"page_label": "4", "file_name": "17a-+Bridges.pdf"}, "hash": "416efa47798222cb5b31ebdf651403861c108453efe666b9c0a6bf6e45d7b1dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "808ba32d-4e16-4cd7-ad78-83fb4c35e8db", "node_type": "1", "metadata": {"page_label": "3", "file_name": "17a-+Bridges.pdf"}, "hash": "d7c8cbfaa4433d97d9bfab0566fc876952660a09f3874b52f150574e93eb95f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2f9015c-365b-460f-8f02-5a371ce1b0b6", "node_type": "1", "metadata": {}, "hash": "0400ce91aefedac825b1c4bcb58052ad3c5db5c46bdc90ceee2962111cdc6f0b", "class_name": "RelatedNodeInfo"}}, "text": "Traffic Isolation and Internetworking with Bridges\u2751Installing bridges breaks a large LAN into LAN segments \u2751Bridges filter packets:  \u2751Same-LAN-segment frames not usually forwarded onto other LAN segments \u2751LAN segments become separate collision domainsbridgecollision  domaincollision  domain= hub= hostLAN (IP network)LAN segmentLAN segment\u2751To which LAN segment should the bridge forward  a frame? \u2751A routing problem! \u2751There are three types of bridges: \u2751Transparent  bridges   (e.g., IEEE 802.1D, IEEE 802.1Q) \u2751Source-routing bridges \u2751Shortest-path bridges    (e.g., RFC 6329 on IEEE 802.1aq)", "start_char_idx": 0, "end_char_idx": 592, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2f9015c-365b-460f-8f02-5a371ce1b0b6": {"__data__": {"id_": "c2f9015c-365b-460f-8f02-5a371ce1b0b6", "embedding": null, "metadata": {"page_label": "5", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1eb27764-2236-456e-8169-d96029185ce7", "node_type": "4", "metadata": {"page_label": "5", "file_name": "17a-+Bridges.pdf"}, "hash": "e35f9926b892eb0416a01aaabfea6fcbc0b1760e71451f92447b3392cb397424", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65877f36-ac40-4dc4-acd3-9f4c836fddaf", "node_type": "1", "metadata": {"page_label": "4", "file_name": "17a-+Bridges.pdf"}, "hash": "416efa47798222cb5b31ebdf651403861c108453efe666b9c0a6bf6e45d7b1dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "332aabdd-43e9-47aa-8a6f-b1f89bafc2ad", "node_type": "1", "metadata": {}, "hash": "6fdba80a4ce76287f1ef2ba084a56600c2b2d342b75ff9d0056113b790f49da2", "class_name": "RelatedNodeInfo"}}, "text": "Transparent Bridges\u2751The purpose of transparent bridges is to keep the packet forwarding functionality transparent to the hosts. \u2751Transparent bridges establish and manage a spanning tree of the network to eliminate packet looping. \u2751The address of a station is always the LAN over which packets from that station came last; this is a dynamic process. \u2751If no address is known, a bridge broadcasts packets for a station over all its ports (or those in the spanning tree).", "start_char_idx": 0, "end_char_idx": 467, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "332aabdd-43e9-47aa-8a6f-b1f89bafc2ad": {"__data__": {"id_": "332aabdd-43e9-47aa-8a6f-b1f89bafc2ad", "embedding": null, "metadata": {"page_label": "6", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "30f6d311-d142-4cf4-b5fc-cf7f84df56b4", "node_type": "4", "metadata": {"page_label": "6", "file_name": "17a-+Bridges.pdf"}, "hash": "4305d26179665aafd56b25c0e6ff77bad7e80ac9becf2744224743c42141f6d1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2f9015c-365b-460f-8f02-5a371ce1b0b6", "node_type": "1", "metadata": {"page_label": "5", "file_name": "17a-+Bridges.pdf"}, "hash": "e35f9926b892eb0416a01aaabfea6fcbc0b1760e71451f92447b3392cb397424", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71c7acc8-47e1-4f4f-9a34-586e7b515544", "node_type": "1", "metadata": {}, "hash": "0b7fa8d38e203c8babfd355c9a8a347149210a39dd5784b022f318e52f3e5543", "class_name": "RelatedNodeInfo"}}, "text": "Addressing in Transparent Bridges\u2751Assume for now that the topology of the internet is a tree. \u2751A bridge listens to every packet it receives over any LAN. \u2751The bridge  builds a station cache consisting of the source addresses of packets it hears and the IDs of the ports over which the packets were heard. Like \u201chost @ port\u201d \u2751For the bridge, the address of a station is the port over which packets from the station were received.BSDport  xport  yS | D |    Bridge B assigns port x as the address of station S after hearing the packet from S.", "start_char_idx": 0, "end_char_idx": 540, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71c7acc8-47e1-4f4f-9a34-586e7b515544": {"__data__": {"id_": "71c7acc8-47e1-4f4f-9a34-586e7b515544", "embedding": null, "metadata": {"page_label": "7", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7e86b0c9-5361-4e82-80b7-f489bffdb3cc", "node_type": "4", "metadata": {"page_label": "7", "file_name": "17a-+Bridges.pdf"}, "hash": "80ba7b427a7a2b54f9de9512e027c5a70585c5bd1e764fd390b8a76f8131ac0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "332aabdd-43e9-47aa-8a6f-b1f89bafc2ad", "node_type": "1", "metadata": {"page_label": "6", "file_name": "17a-+Bridges.pdf"}, "hash": "4305d26179665aafd56b25c0e6ff77bad7e80ac9becf2744224743c42141f6d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6142703b-0ed1-479e-96b1-c98b3e1a0d4d", "node_type": "1", "metadata": {}, "hash": "d2f6f171eeb2da0f479bbad9d3db0d4ddf0b8d5bf91f86e896d9664e69f1fe49", "class_name": "RelatedNodeInfo"}}, "text": "Addressing in Transparent Bridges\u2751Keep assuming a tree topology \u2751When a bridge receives a packet, it looks up its station cache for the destination MAC address in the packet. \u2751If match is found then: \u2751If port in the cache is the same port over which packet came, the packet is filtered (dropped) \u2751Otherwise, the bridge forwards the packet to the port specified in the cache. \u2751If no matching is found, the bridge forwards the packet over all ports other than the port from which the packet came. B has station cache entry:   D - port y or B does not know about D and forwards to port y (and other ports other than x)BSDport  xport  yS | D |    S | D |", "start_char_idx": 0, "end_char_idx": 650, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6142703b-0ed1-479e-96b1-c98b3e1a0d4d": {"__data__": {"id_": "6142703b-0ed1-479e-96b1-c98b3e1a0d4d", "embedding": null, "metadata": {"page_label": "8", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ec0f081e-83c2-4ed3-a8e0-5a574244062c", "node_type": "4", "metadata": {"page_label": "8", "file_name": "17a-+Bridges.pdf"}, "hash": "e94d4cd1d38a0c6abc7c82918f36822ab893ab52d886baa2e717a458d319cab1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71c7acc8-47e1-4f4f-9a34-586e7b515544", "node_type": "1", "metadata": {"page_label": "7", "file_name": "17a-+Bridges.pdf"}, "hash": "37726e9cfc3a6f5b68ea268ca25bdb8a527897aaf21f3f9a03f57c77e7549f60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f46537ed-2155-4144-bb86-d1aec15ef694", "node_type": "1", "metadata": {}, "hash": "825e0de95cffb6cbb541ac7740718c6f87e367424d19d0837add17e0fc4fb9d4", "class_name": "RelatedNodeInfo"}}, "text": "Major Problem:  Looping Occurs in Mesh Topologies \u2751The address learning process is such that packets will traverse loops, and worse, replicas of such packets will be produced and sent over the same loops! \u2751S sends a packet to D, D is silent, and bridges do not know about D.S|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DS|DLooping with bridges leads to traffic explosion Packet is replicated three times  at each LAN each time it is forwarded by the bridges!ABCS\nD", "start_char_idx": 0, "end_char_idx": 490, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f46537ed-2155-4144-bb86-d1aec15ef694": {"__data__": {"id_": "f46537ed-2155-4144-bb86-d1aec15ef694", "embedding": null, "metadata": {"page_label": "9", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a58ac901-5cee-4507-a631-88147eeaeabd", "node_type": "4", "metadata": {"page_label": "9", "file_name": "17a-+Bridges.pdf"}, "hash": "7fcb4e01650559b7f62ebd5772b459c72ce5fe9369d1a0497c79e60a22cebe06", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6142703b-0ed1-479e-96b1-c98b3e1a0d4d", "node_type": "1", "metadata": {"page_label": "8", "file_name": "17a-+Bridges.pdf"}, "hash": "e94d4cd1d38a0c6abc7c82918f36822ab893ab52d886baa2e717a458d319cab1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae5c5f73-c620-4532-8d15-4a2715a4ba21", "node_type": "1", "metadata": {}, "hash": "2978759fc7e81c869f720d0dabd45638ad64c00702da8c7321c04d368d41c091", "class_name": "RelatedNodeInfo"}}, "text": "The Spanning Tree Algorithm (STA)\u2751The objective is to define a single spanning tree in the internet over which packets flow without looping. \u2751Basis of operation (Perlman 1992, part of IEEE standard): \u2751Elect a single bridge as the root of the tree in a distributed manner \u2751Calculate distance (in hops) on a shortest  path to root \u2751Elect a designated bridge for each LAN (e.g., closest to the root in the LAN) \u2751Allow only designated bridge to forward packets to and from its LANrootA distributed election algorithm  is used to build the spanning tree", "start_char_idx": 0, "end_char_idx": 548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae5c5f73-c620-4532-8d15-4a2715a4ba21": {"__data__": {"id_": "ae5c5f73-c620-4532-8d15-4a2715a4ba21", "embedding": null, "metadata": {"page_label": "10", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "db0dd6b2-751b-401c-b9c0-77f273d7d710", "node_type": "4", "metadata": {"page_label": "10", "file_name": "17a-+Bridges.pdf"}, "hash": "b28152f226b5f79bf85685dfa9b7579ce86bded033d000545b570f89acc71e08", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f46537ed-2155-4144-bb86-d1aec15ef694", "node_type": "1", "metadata": {"page_label": "9", "file_name": "17a-+Bridges.pdf"}, "hash": "7fcb4e01650559b7f62ebd5772b459c72ce5fe9369d1a0497c79e60a22cebe06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d36ed4ca-7f76-410b-839d-3bfb71e3d342", "node_type": "1", "metadata": {}, "hash": "0429870f6cd41ed61def15a19efcb7df8d332cf38ff41a6cfca7bae4c6c8cad3", "class_name": "RelatedNodeInfo"}}, "text": "STA Operation\u2751Each bridge has multiple MAC ID\u2019s or addresses (one per port) \u2751A bridge has a bridge-wide ID (one of the MAC addresses) \u2751HELLOs: messages used to build tree, sent to all bridges of a LAN \u2751HELLO specifies: \u2751Root ID: The MAC address of the bridge assumed to be the root \u2751Transmitting bridge ID: MAC address of bridge sending HELLO \u2751Cost: Length (in hops) of path from bridge to root \u2751A bridge starts by considering itself the proposed root \u2751Bridge starts election process by sending HELLO = own ID, 0, own ID", "start_char_idx": 0, "end_char_idx": 520, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d36ed4ca-7f76-410b-839d-3bfb71e3d342": {"__data__": {"id_": "d36ed4ca-7f76-410b-839d-3bfb71e3d342", "embedding": null, "metadata": {"page_label": "11", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0b7c960c-d73d-4a30-bc9a-6d14be87d4f9", "node_type": "4", "metadata": {"page_label": "11", "file_name": "17a-+Bridges.pdf"}, "hash": "89ad87e8d822b314ecf72bf636d66ed9118e7057f4c675f21aca6305feb982b1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae5c5f73-c620-4532-8d15-4a2715a4ba21", "node_type": "1", "metadata": {"page_label": "10", "file_name": "17a-+Bridges.pdf"}, "hash": "b28152f226b5f79bf85685dfa9b7579ce86bded033d000545b570f89acc71e08", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8751f5c4-de8d-4c7f-9404-40caeec6c92d", "node_type": "1", "metadata": {}, "hash": "2f646cdcb5cfce9039df79873dad92fd6a484eec3ac60105d944cd4bfbbc0b65", "class_name": "RelatedNodeInfo"}}, "text": "STA Operation, Cont.\u2751Bridges adopt the smallest HELLO they hear: \u2751Minimum root ID \u2751Smallest distance to root \u2751Minimum reporting bridge ID \u2751Bridge compares its own HELLO with its neighbors\u2019 HELLOs, and chooses the smallest \u2751Its root port becomes the port to neighbor bridge with smallest HELLO \u2751Bridge composes a new HELLO, adding 1 to the distance to adopted root20          xyz[21,2,30][10,4,94][10,20,15]Bridge 20 must adopt HELLO from neighbor 94 over port x: smallest root ID and smallest distance to root! Sends HELLO stating  [10, 5, 20] over ports y and z[10,5,20][10,5,20]", "start_char_idx": 0, "end_char_idx": 580, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8751f5c4-de8d-4c7f-9404-40caeec6c92d": {"__data__": {"id_": "8751f5c4-de8d-4c7f-9404-40caeec6c92d", "embedding": null, "metadata": {"page_label": "12", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cba1e246-8ed7-41e3-8293-2219d3569257", "node_type": "4", "metadata": {"page_label": "12", "file_name": "17a-+Bridges.pdf"}, "hash": "2e6f6a7ac6d0976c7c547ca7ab09c8996568968aec535f7dc2a796f2c1066842", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d36ed4ca-7f76-410b-839d-3bfb71e3d342", "node_type": "1", "metadata": {"page_label": "11", "file_name": "17a-+Bridges.pdf"}, "hash": "89ad87e8d822b314ecf72bf636d66ed9118e7057f4c675f21aca6305feb982b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ce96670-64ea-463c-81a7-7611d668f8b9", "node_type": "1", "metadata": {}, "hash": "3162654115706859733acf41e1edc91906a539ff3cbb9d8f64a0cd394b236e86", "class_name": "RelatedNodeInfo"}}, "text": "STA Operation, Conc.\u2751A bridge sends new HELLO over all ports from which \u201clarger\u201d HELLOs were received. \u2751Bridge knows if it is the designated bridge for a LAN if it does not hear a \u201csmaller\u201d HELLO than its own. \u2751Its root port is the port from which the smallest HELLO was received. \u2751Bridge puts its root port and all ports for which it is the designated bridge in forwarding state. \u2751Bridge puts all other ports in blocking state. \u2751Data packets, control packets, and learning of addresses take place only over ports in forwarding state (over the spanning tree).", "start_char_idx": 0, "end_char_idx": 559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ce96670-64ea-463c-81a7-7611d668f8b9": {"__data__": {"id_": "8ce96670-64ea-463c-81a7-7611d668f8b9", "embedding": null, "metadata": {"page_label": "13", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0995487d-cb61-4dc5-bd25-a093d316a164", "node_type": "4", "metadata": {"page_label": "13", "file_name": "17a-+Bridges.pdf"}, "hash": "1a563f0b9e62014fa7da839f29390c427c9aa3df6fc198afb32edfd1402cecd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8751f5c4-de8d-4c7f-9404-40caeec6c92d", "node_type": "1", "metadata": {"page_label": "12", "file_name": "17a-+Bridges.pdf"}, "hash": "2e6f6a7ac6d0976c7c547ca7ab09c8996568968aec535f7dc2a796f2c1066842", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d23e98c-5b89-4a9f-931d-013414a917ad", "node_type": "1", "metadata": {}, "hash": "c6faddaf707ea0199f31391fab3f58d50ee710b1b074d99ca956dbd91263656d", "class_name": "RelatedNodeInfo"}}, "text": "Example of STA Operation\u2751Consider a given bridge 20:\n[21,2,30][10,4,50][10,20,15][10,5,20][10,5,20]20          xyzv[10,4,94][10,4,50]root portforwarding modeforwarding mode", "start_char_idx": 0, "end_char_idx": 172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d23e98c-5b89-4a9f-931d-013414a917ad": {"__data__": {"id_": "7d23e98c-5b89-4a9f-931d-013414a917ad", "embedding": null, "metadata": {"page_label": "14", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1d05331a-8447-481b-b1d4-61e5259f7da1", "node_type": "4", "metadata": {"page_label": "14", "file_name": "17a-+Bridges.pdf"}, "hash": "4be15df536e683ec936138cedd2f3f00fa98fdb24e1905f927052fba86ff1e1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ce96670-64ea-463c-81a7-7611d668f8b9", "node_type": "1", "metadata": {"page_label": "13", "file_name": "17a-+Bridges.pdf"}, "hash": "1a563f0b9e62014fa7da839f29390c427c9aa3df6fc198afb32edfd1402cecd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "667fe508-f45d-4088-89da-6a6f03f3328b", "node_type": "1", "metadata": {}, "hash": "caea5c8e929f873cf9b6f499e6b706449c0f33effcbca1ff45226191193dc625", "class_name": "RelatedNodeInfo"}}, "text": "Handling Failures in STAProcedure to fix the tree when a failed bridge stops sending HELLOs breaking tree: \u2751Each HELLO has an age field \u2751Age of of HELLO is incremented over each hop and each time unit while in storage and stored HELLOs are discarded when ages reach a maximum value \u2751Root sends HELLO periodically with 0 age \u2751Bridge recomputes best HELLO (with a valid age) for port for which HELLO is deleted \u2751Bridge can decide to become root if it provides the best new HELLO \u2751Spanning tree calculation occurs when a HELLO is received from a port or a stored HELLO is discarded  \u2751Receiving bridge forwards HELLO (with new distance and its own ID for reporting bridge) for all ports for which it is designated bridge HELLO from root propagates through spanning tree in the absence of failures If root or other bridge fails, bridges down-tree stop receiving HELLOs originated by the root", "start_char_idx": 0, "end_char_idx": 886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "667fe508-f45d-4088-89da-6a6f03f3328b": {"__data__": {"id_": "667fe508-f45d-4088-89da-6a6f03f3328b", "embedding": null, "metadata": {"page_label": "15", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2856f417-443d-4777-8acb-545a6d3b473d", "node_type": "4", "metadata": {"page_label": "15", "file_name": "17a-+Bridges.pdf"}, "hash": "6cad8a1fb754b5d7fd17aca322b944a703b274b6b33c6bd9731103329c69b84a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d23e98c-5b89-4a9f-931d-013414a917ad", "node_type": "1", "metadata": {"page_label": "14", "file_name": "17a-+Bridges.pdf"}, "hash": "4be15df536e683ec936138cedd2f3f00fa98fdb24e1905f927052fba86ff1e1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b490d51a-45a2-4a63-ad64-e75d5d0b4595", "node_type": "1", "metadata": {}, "hash": "95ca97c2efd80478e8414c0f2ddc22f3a9ea740aa450f1c85af09e5f384e5723", "class_name": "RelatedNodeInfo"}}, "text": "Temporary Loops in STA\u2751STA does not guarantee that the aggregate of ports in forwarding mode define a tree [or a forest] at every instant. \u2751Why? Bridges select their root port w/o any ordering constraint \u2751Because packets have no TTL, they loop indefinitely and multiply, until tree is correct. \u2751Ad hoc approach to cope with loops:  \u2751Make a bridge wait a long time before moving a port to forwarding mode. \u2751Hold-down timer is set to twice the maximum transit time in the internet (say 30 sec). \u2751This solution is slow in large internets or does not work at all, because we do not know the maximum transit time after a topology change.", "start_char_idx": 0, "end_char_idx": 632, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b490d51a-45a2-4a63-ad64-e75d5d0b4595": {"__data__": {"id_": "b490d51a-45a2-4a63-ad64-e75d5d0b4595", "embedding": null, "metadata": {"page_label": "16", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a137674-7a39-44bc-9ed0-713d9a1235a4", "node_type": "4", "metadata": {"page_label": "16", "file_name": "17a-+Bridges.pdf"}, "hash": "eb5c00f355babbc3b1567e243ca88fe16c98fb5a454f795c3e8f4b6c471ae1de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "667fe508-f45d-4088-89da-6a6f03f3328b", "node_type": "1", "metadata": {"page_label": "15", "file_name": "17a-+Bridges.pdf"}, "hash": "6cad8a1fb754b5d7fd17aca322b944a703b274b6b33c6bd9731103329c69b84a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96e72234-a1c1-49d0-929d-d376f5f7061a", "node_type": "1", "metadata": {}, "hash": "c692432777d62599ababcb2bbcd27eb6e2029eb8ff0fd5e1e0401e40a0f1da9b", "class_name": "RelatedNodeInfo"}}, "text": "Refreshing Station Cache\u2751The tree can change due to link and bridge failures or stations physically moving. \u2751Bridges must distinguish between the two types (stations move very slowly) to decide how often to refresh station cache (so that packets are not forwarded in vain). Approach: \u2751Bridge that changes the state of a port sends a topology  change notification (TCN) to the root (on its root port) persistently, until the \u201cparent\u201d bridge ACKs (with a flag in its HELLO) \u2751Bridge receiving a TCN forwards it towards the root  \u2751If root detects a topology change or receives a TCN, it sets the TCN flag in its own HELLO for a period of time (say 30 sec). \u2751The HELLOs with TCN set force bridges to refresh their station caches more often, until the TCN is reset.", "start_char_idx": 0, "end_char_idx": 759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96e72234-a1c1-49d0-929d-d376f5f7061a": {"__data__": {"id_": "96e72234-a1c1-49d0-929d-d376f5f7061a", "embedding": null, "metadata": {"page_label": "17", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0009942b-510a-436f-a3f5-d49c412ea020", "node_type": "4", "metadata": {"page_label": "17", "file_name": "17a-+Bridges.pdf"}, "hash": "46d8bccc44d918cd237c9fdaed143a3691f51c66b7b15d9acb376f94d1f7d45b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b490d51a-45a2-4a63-ad64-e75d5d0b4595", "node_type": "1", "metadata": {"page_label": "16", "file_name": "17a-+Bridges.pdf"}, "hash": "eb5c00f355babbc3b1567e243ca88fe16c98fb5a454f795c3e8f4b6c471ae1de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "134e17bd-d3d0-468d-95d3-7a567b2dc1d4", "node_type": "1", "metadata": {}, "hash": "71225a3d7b660b7ca2d31ccc26ad483d3c6a517396e575c41c4c0a9014005f62", "class_name": "RelatedNodeInfo"}}, "text": "Implications45\n1072033root533102047\u2751Limitation: Many wasted links and temporary loops may still occur \u2751Shortest-path bridges remedy this problem by implementing link-state routing (IS-IS protocol extension) and hence use all links as needed (e.g., IEEE 802.1aq, RFC 6329) \u2751Why do we need such a complex routing protocol?", "start_char_idx": 0, "end_char_idx": 320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "134e17bd-d3d0-468d-95d3-7a567b2dc1d4": {"__data__": {"id_": "134e17bd-d3d0-468d-95d3-7a567b2dc1d4", "embedding": null, "metadata": {"page_label": "18", "file_name": "17a-+Bridges.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8a8c6f6-03ec-4fb7-963c-0bb9c54c2f34", "node_type": "4", "metadata": {"page_label": "18", "file_name": "17a-+Bridges.pdf"}, "hash": "52ce884086459ba7e58f884509a072d7a96a93d1f1c1aac42617f9fe1ccc9a8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96e72234-a1c1-49d0-929d-d376f5f7061a", "node_type": "1", "metadata": {"page_label": "17", "file_name": "17a-+Bridges.pdf"}, "hash": "46d8bccc44d918cd237c9fdaed143a3691f51c66b7b15d9acb376f94d1f7d45b", "class_name": "RelatedNodeInfo"}}, "text": "END", "start_char_idx": 0, "end_char_idx": 3, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"86f3f6f4-e516-4a7f-9d25-4e3849b48410": {"node_ids": ["7d90e3f7-7cd7-46bc-b64d-cbfa6a020b25"], "metadata": {"file_path": "../data/txt_files/getting_started.txt", "file_name": "getting_started.txt", "file_type": "text/plain", "file_size": 2360, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}}, "8134e5bb-5cfe-4f70-96cd-69c30ce41d1f": {"node_ids": ["fdd13b16-14b7-406d-936b-4f0e7dbf5ad4"], "metadata": {"file_path": "../data/txt_files/payments.txt", "file_name": "payments.txt", "file_type": "text/plain", "file_size": 621, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}}, "38eae104-6adf-4c22-bd0f-73ee6881a43c": {"node_ids": ["b99caea3-a960-49e3-b455-bd0949986560"], "metadata": {"file_path": "../data/txt_files/selling.txt", "file_name": "selling.txt", "file_type": "text/plain", "file_size": 1137, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}}, "98892e1e-69b7-4f52-9c48-e3ad24f0b172": {"node_ids": ["a377b391-6fd5-44da-9bfe-8d4a6f01010b"], "metadata": {"file_path": "../data/txt_files/test.txt", "file_name": "test.txt", "file_type": "text/plain", "file_size": 52, "creation_date": "2024-01-31", "last_modified_date": "2024-01-30", "last_accessed_date": "2024-01-31"}}, "8adba8fe-16fb-42aa-bdfe-5c3bdfbde10e": {"node_ids": ["f407e1dd-e050-4658-a272-c982afb4a0af"], "metadata": {"page_label": "1", "file_name": "ANN.pdf"}}, "f5b32922-730e-43dd-90de-79764f5d889a": {"node_ids": ["c300f015-c1a2-4262-861e-02b10b4ca7f9"], "metadata": {"page_label": "2", "file_name": "ANN.pdf"}}, "e84629ac-31cf-4771-9f78-b1ffdfa4fe4a": {"node_ids": ["c2e9ca89-e69c-4a75-a07e-8dba34d925c8"], "metadata": {"page_label": "3", "file_name": "ANN.pdf"}}, "e0494a39-ac6a-41c8-95d1-52cbc714168c": {"node_ids": ["21168925-3258-4b51-aa4c-c53b8f42d9e6"], "metadata": {"page_label": "4", "file_name": "ANN.pdf"}}, "6ad6bb7b-9f14-4910-9959-00704a907387": {"node_ids": ["a5faa3d7-bde6-4785-a697-ad6eed0b3c64"], "metadata": {"page_label": "5", "file_name": "ANN.pdf"}}, "66a66ade-a22d-4c75-87ac-70283eb4c072": {"node_ids": ["4ad5d385-1b47-4471-a726-f43ff15ced42"], "metadata": {"page_label": "6", "file_name": "ANN.pdf"}}, "c428d2bf-b75f-4016-98b6-d6835116de7c": {"node_ids": ["62b89611-8377-4594-8c2a-a68803831667"], "metadata": {"page_label": "7", "file_name": "ANN.pdf"}}, "a24ab97d-4e5a-44b4-8893-6fd149413595": {"node_ids": ["9b93e878-9bb4-43c9-9a8c-426fb8de0c4a"], "metadata": {"page_label": "8", "file_name": "ANN.pdf"}}, "d7656ccf-2042-4248-b77c-beacbbeb8a58": {"node_ids": ["dae4284f-52e6-4e53-a90d-af3fa10af2e7"], "metadata": {"page_label": "9", "file_name": "ANN.pdf"}}, "52f95bc0-31bb-4ef1-ae72-5e0172880f49": {"node_ids": ["021b95ca-9e6b-4a94-b67f-c3b52f2fb7b9"], "metadata": {"page_label": "10", "file_name": "ANN.pdf"}}, "ddf89d81-42e3-4fd2-87e7-ade3dfe6508b": {"node_ids": ["82ad9044-2e82-44b5-aff9-dd7bcadc980d"], "metadata": {"page_label": "11", "file_name": "ANN.pdf"}}, "f7b8a771-55c3-4786-9fae-d0961cc7037c": {"node_ids": ["6900c797-89e9-4c7c-878e-66c10cbf472b"], "metadata": {"page_label": "12", "file_name": "ANN.pdf"}}, "e65d1dad-7de5-43d2-82f8-98e707fde569": {"node_ids": ["1ccc00e9-8c48-4da1-a6d6-2871b3c699a4"], "metadata": {"page_label": "13", "file_name": "ANN.pdf"}}, "07af7883-b891-48bc-af33-12b54e72227c": {"node_ids": ["632d56f5-8e22-466d-9790-565f40fea6ea"], "metadata": {"page_label": "14", "file_name": "ANN.pdf"}}, "8d44ce75-ea52-4b27-84d2-6d24f012363f": {"node_ids": ["b22b19c7-150a-461b-9594-35ca8bd26736"], "metadata": {"page_label": "15", "file_name": "ANN.pdf"}}, "52f3d6ff-c4be-42b8-beb8-1f058b5989cc": {"node_ids": ["6aef95e3-05b1-4077-82ff-cd503f2f506b"], "metadata": {"page_label": "16", "file_name": "ANN.pdf"}}, "f309fbed-a76b-4338-89ec-c3b58260fa85": {"node_ids": ["1cab73e6-2cc0-4317-9a9f-09e5077a1230"], "metadata": {"page_label": "17", "file_name": "ANN.pdf"}}, "faccc440-6628-4072-afa3-a0ce1d53e73b": {"node_ids": ["485987b1-19e4-4437-9230-91b21e0c76a9"], "metadata": {"page_label": "18", "file_name": "ANN.pdf"}}, "6ad90067-a011-4e97-b645-e099824402f6": {"node_ids": ["5b6259a8-5c31-4d69-98b1-46957ef52c5b"], "metadata": {"page_label": "19", "file_name": "ANN.pdf"}}, "6a29bb7c-4052-4aeb-a145-4c5fbfbb61d7": {"node_ids": ["6204fe7d-cad2-4a27-b61d-94a6baf41443"], "metadata": {"page_label": "20", "file_name": "ANN.pdf"}}, "de9a80eb-2c15-4aeb-a569-c917b2a1e662": {"node_ids": ["330b3064-327f-43c9-ad53-f8b4aecee689"], "metadata": {"page_label": "21", "file_name": "ANN.pdf"}}, "f8e70d21-6bdd-44e9-b148-a85953d7f32e": {"node_ids": ["7091f64d-4e4e-4ae7-96fe-8e4f424f0c4d"], "metadata": {"page_label": "22", "file_name": "ANN.pdf"}}, "3d7ff3fa-798a-4462-bb75-9cf66542fe3c": {"node_ids": ["762c7ccd-6294-4f7f-988d-823b6f5712c0"], "metadata": {"page_label": "23", "file_name": "ANN.pdf"}}, "993b4d8b-7060-4556-8c1c-a6ac3cb793b0": {"node_ids": ["96dec1a8-387a-4439-933a-115c7a6fb78f"], "metadata": {"page_label": "24", "file_name": "ANN.pdf"}}, "5618a944-1866-4b89-8fc3-6314eecffea8": {"node_ids": ["09c6075c-0357-46cd-b212-df019ceb7e4e"], "metadata": {"page_label": "25", "file_name": "ANN.pdf"}}, "5c470945-250e-420b-ad21-d1ff50e8cfd6": {"node_ids": ["1af47ba0-b5ad-4433-b4a9-f2924754c124"], "metadata": {"page_label": "26", "file_name": "ANN.pdf"}}, "ee136f72-10be-4a10-872f-0d59f5cfaf5d": {"node_ids": ["81dba120-e47a-46ce-9f55-d04a8fd0aa3b"], "metadata": {"page_label": "27", "file_name": "ANN.pdf"}}, "f1fd88cb-0150-41a7-8e84-86a2c9650a49": {"node_ids": ["8c14b1d0-a4e2-462b-970f-6e3abe2b1d28"], "metadata": {"page_label": "28", "file_name": "ANN.pdf"}}, "81ede3f4-f732-447c-ac26-75582cf97176": {"node_ids": ["93530868-b077-4b5a-bc8e-e0130039a5a3"], "metadata": {"page_label": "29", "file_name": "ANN.pdf"}}, "b1b7cd7e-41b6-42ca-8c60-7d16dc18e50a": {"node_ids": ["61edf2bd-c984-49bd-94a3-8607bc4dd74a"], "metadata": {"page_label": "30", "file_name": "ANN.pdf"}}, "fedb07f4-ce5b-414b-bf85-d752a8e771f4": {"node_ids": ["e79be5b5-4775-4cd9-86dc-d461516205cc"], "metadata": {"page_label": "31", "file_name": "ANN.pdf"}}, "c2811ee0-001b-4706-8168-e6c30302d471": {"node_ids": ["d1e0002e-3613-43e1-9a22-dda6d822cfc9"], "metadata": {"page_label": "32", "file_name": "ANN.pdf"}}, "e7bdf128-97f4-4aae-8a94-138d4bdd61bb": {"node_ids": ["fe238974-fe68-40d9-820c-e47d579e781c"], "metadata": {"page_label": "33", "file_name": "ANN.pdf"}}, "bc8b03da-2120-40e3-90c8-a8864c9768f1": {"node_ids": ["678c5d77-09ea-4895-bf43-ecc98365b53d"], "metadata": {"page_label": "34", "file_name": "ANN.pdf"}}, "2485160d-36dc-4c4e-b708-e53d71c1bd98": {"node_ids": ["d3765dcc-ecda-4a86-98c1-7f4ab02a627c"], "metadata": {"page_label": "35", "file_name": "ANN.pdf"}}, "526c7439-2265-4009-bc9a-042915192a09": {"node_ids": ["e2653753-e23f-4fcb-938a-2fe40369461e"], "metadata": {"page_label": "36", "file_name": "ANN.pdf"}}, "1ef78171-3202-4408-a42a-5d4130e9c6c2": {"node_ids": ["e42f3415-4a69-464e-aa68-9c58d288ef40"], "metadata": {"page_label": "37", "file_name": "ANN.pdf"}}, "12bb8d7c-95fb-4a19-8f4a-f474f4ee66c8": {"node_ids": ["33535932-03c0-4c41-980e-1aaab4800bd5"], "metadata": {"page_label": "38", "file_name": "ANN.pdf"}}, "f185fc72-7abc-444f-adb7-65b72644f52a": {"node_ids": ["040a5248-ce0f-4c08-a48c-eaa30427741f"], "metadata": {"page_label": "39", "file_name": "ANN.pdf"}}, "6446ff8b-19b7-4370-9cce-e5f012654df2": {"node_ids": ["83eaf2fd-6d4d-4921-bf46-e11a26d29987"], "metadata": {"page_label": "40", "file_name": "ANN.pdf"}}, "906bc828-2da8-495f-b373-b7a56ca0b297": {"node_ids": ["3430677b-4cd8-4e87-8ef0-e918e71e2306"], "metadata": {"page_label": "41", "file_name": "ANN.pdf"}}, "b964d3dd-f752-4a78-822c-ce267c586e71": {"node_ids": ["32978a76-a18f-4f61-8a70-e85cab62650a"], "metadata": {"page_label": "42", "file_name": "ANN.pdf"}}, "2336b549-333c-4dce-a5af-461a1547d7d6": {"node_ids": ["1ec82e3d-b47a-4be8-aa97-6a84b10ecf7c"], "metadata": {"page_label": "43", "file_name": "ANN.pdf"}}, "635f44da-7c4d-43b5-acbd-e11a712bfc50": {"node_ids": ["0fe383a2-9ce0-4024-8c63-3acafb474132"], "metadata": {"page_label": "44", "file_name": "ANN.pdf"}}, "810ac4e4-781a-478d-b708-765191428c46": {"node_ids": ["20d03db5-9268-4e28-91db-94a881743d62"], "metadata": {"page_label": "45", "file_name": "ANN.pdf"}}, "8099c798-3d18-4478-9447-1649b17aa827": {"node_ids": ["d8e482d9-1905-4563-906b-649d56a1e98a"], "metadata": {"page_label": "46", "file_name": "ANN.pdf"}}, "b28c5116-148d-4cb2-b1a7-20bab321cf51": {"node_ids": ["a60e8c12-bfa0-4162-8d80-fd8e42ddd32f"], "metadata": {"page_label": "47", "file_name": "ANN.pdf"}}, "7c8415b0-c0f6-460b-817a-73e4be151854": {"node_ids": ["20ac1cca-52b9-45c2-84e1-a6cd2e2efd18"], "metadata": {"page_label": "48", "file_name": "ANN.pdf"}}, "b90f47ab-0875-44fe-9c03-ee3ce58e6c24": {"node_ids": ["372b1c3b-59be-4651-bd66-0d0aacfbed62"], "metadata": {"page_label": "49", "file_name": "ANN.pdf"}}, "bd509720-d362-4a03-b338-4a666df1c27d": {"node_ids": ["cb271ed7-8063-409b-b374-ca38d9d2bc54"], "metadata": {"page_label": "50", "file_name": "ANN.pdf"}}, "07f05a6c-71ee-4890-8482-70abed864d12": {"node_ids": ["94aca33c-0bf8-4c9e-8452-c9f281c1372c"], "metadata": {"page_label": "51", "file_name": "ANN.pdf"}}, "c094c12f-1872-4230-9db3-663177fec3a3": {"node_ids": ["9fcef31d-efcb-464e-b059-f05fb557e538"], "metadata": {"page_label": "52", "file_name": "ANN.pdf"}}, "50d0329f-e7ad-4e8a-9212-ed0c13e70545": {"node_ids": ["34c9bd60-35dc-45f7-9dc5-751c6cf4fc3b"], "metadata": {"page_label": "53", "file_name": "ANN.pdf"}}, "344920e6-8a58-4db3-a16f-9343b93a2be5": {"node_ids": ["594204f0-b409-4f3f-b09b-b04aaeef930c"], "metadata": {"page_label": "54", "file_name": "ANN.pdf"}}, "594e3194-73dd-4992-9132-b9ebd719cd04": {"node_ids": ["21d8689e-ad02-4113-9540-a6b30a937c3f"], "metadata": {"page_label": "55", "file_name": "ANN.pdf"}}, "45a76e81-0eaf-4c4a-8df7-0e20869336ff": {"node_ids": ["fbe343c1-b0f8-445f-a6c6-f8cf6ce8a398"], "metadata": {"page_label": "56", "file_name": "ANN.pdf"}}, "5751c887-f7b6-4adf-82b7-52b1d8e9b490": {"node_ids": ["de2c13d9-5c04-4418-88d3-5a5d54965114"], "metadata": {"page_label": "57", "file_name": "ANN.pdf"}}, "9d7405eb-105b-4067-9c86-d5ec0fd63c7a": {"node_ids": ["2ac1d1d1-77d5-4164-a84a-f68051f203bc"], "metadata": {"page_label": "58", "file_name": "ANN.pdf"}}, "d633ffc0-145b-480d-9051-e14b5e6e3c2c": {"node_ids": ["05b4cf75-2217-48be-b451-4ac3ffded763"], "metadata": {"page_label": "59", "file_name": "ANN.pdf"}}, "630f92dc-b28f-4bf4-bbc1-de92a604305a": {"node_ids": ["bff13d08-2689-4fb5-b596-e9039b4df38d"], "metadata": {"page_label": "60", "file_name": "ANN.pdf"}}, "c242fcff-2699-4f7f-ac50-22fcd43951ad": {"node_ids": ["1c5c27e5-9e75-48e0-be74-48f003f326a8"], "metadata": {"page_label": "61", "file_name": "ANN.pdf"}}, "57a84c72-4095-45df-935e-d30a61a704e7": {"node_ids": ["e8af4f38-7fdd-4078-ad4e-153b1789f40e"], "metadata": {"page_label": "62", "file_name": "ANN.pdf"}}, "cc768538-b7db-493c-a5e8-908d4d93adf4": {"node_ids": ["487dd13a-075b-4673-a1f2-45b7af8bcecd"], "metadata": {"page_label": "1", "file_name": "17a-+Bridges.pdf"}}, "cbcae74f-a7ff-4d6c-8c63-4459faec75e4": {"node_ids": ["5f0c37aa-0084-48cf-801b-afacfbc392f7"], "metadata": {"page_label": "2", "file_name": "17a-+Bridges.pdf"}}, "837c2796-ac36-4382-9181-318604ae0185": {"node_ids": ["808ba32d-4e16-4cd7-ad78-83fb4c35e8db"], "metadata": {"page_label": "3", "file_name": "17a-+Bridges.pdf"}}, "b04ce058-9be5-499f-be8d-19035dc76ead": {"node_ids": ["65877f36-ac40-4dc4-acd3-9f4c836fddaf"], "metadata": {"page_label": "4", "file_name": "17a-+Bridges.pdf"}}, "1eb27764-2236-456e-8169-d96029185ce7": {"node_ids": ["c2f9015c-365b-460f-8f02-5a371ce1b0b6"], "metadata": {"page_label": "5", "file_name": "17a-+Bridges.pdf"}}, "30f6d311-d142-4cf4-b5fc-cf7f84df56b4": {"node_ids": ["332aabdd-43e9-47aa-8a6f-b1f89bafc2ad"], "metadata": {"page_label": "6", "file_name": "17a-+Bridges.pdf"}}, "7e86b0c9-5361-4e82-80b7-f489bffdb3cc": {"node_ids": ["71c7acc8-47e1-4f4f-9a34-586e7b515544"], "metadata": {"page_label": "7", "file_name": "17a-+Bridges.pdf"}}, "ec0f081e-83c2-4ed3-a8e0-5a574244062c": {"node_ids": ["6142703b-0ed1-479e-96b1-c98b3e1a0d4d"], "metadata": {"page_label": "8", "file_name": "17a-+Bridges.pdf"}}, "a58ac901-5cee-4507-a631-88147eeaeabd": {"node_ids": ["f46537ed-2155-4144-bb86-d1aec15ef694"], "metadata": {"page_label": "9", "file_name": "17a-+Bridges.pdf"}}, "db0dd6b2-751b-401c-b9c0-77f273d7d710": {"node_ids": ["ae5c5f73-c620-4532-8d15-4a2715a4ba21"], "metadata": {"page_label": "10", "file_name": "17a-+Bridges.pdf"}}, "0b7c960c-d73d-4a30-bc9a-6d14be87d4f9": {"node_ids": ["d36ed4ca-7f76-410b-839d-3bfb71e3d342"], "metadata": {"page_label": "11", "file_name": "17a-+Bridges.pdf"}}, "cba1e246-8ed7-41e3-8293-2219d3569257": {"node_ids": ["8751f5c4-de8d-4c7f-9404-40caeec6c92d"], "metadata": {"page_label": "12", "file_name": "17a-+Bridges.pdf"}}, "0995487d-cb61-4dc5-bd25-a093d316a164": {"node_ids": ["8ce96670-64ea-463c-81a7-7611d668f8b9"], "metadata": {"page_label": "13", "file_name": "17a-+Bridges.pdf"}}, "1d05331a-8447-481b-b1d4-61e5259f7da1": {"node_ids": ["7d23e98c-5b89-4a9f-931d-013414a917ad"], "metadata": {"page_label": "14", "file_name": "17a-+Bridges.pdf"}}, "2856f417-443d-4777-8acb-545a6d3b473d": {"node_ids": ["667fe508-f45d-4088-89da-6a6f03f3328b"], "metadata": {"page_label": "15", "file_name": "17a-+Bridges.pdf"}}, "8a137674-7a39-44bc-9ed0-713d9a1235a4": {"node_ids": ["b490d51a-45a2-4a63-ad64-e75d5d0b4595"], "metadata": {"page_label": "16", "file_name": "17a-+Bridges.pdf"}}, "0009942b-510a-436f-a3f5-d49c412ea020": {"node_ids": ["96e72234-a1c1-49d0-929d-d376f5f7061a"], "metadata": {"page_label": "17", "file_name": "17a-+Bridges.pdf"}}, "a8a8c6f6-03ec-4fb7-963c-0bb9c54c2f34": {"node_ids": ["134e17bd-d3d0-468d-95d3-7a567b2dc1d4"], "metadata": {"page_label": "18", "file_name": "17a-+Bridges.pdf"}}}}